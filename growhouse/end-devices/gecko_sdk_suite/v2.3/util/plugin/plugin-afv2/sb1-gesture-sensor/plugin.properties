# Name of the plugin.
name= SB1 Gesture Sensor
category=HAL

# Any string is allowable here.  Generally though it is Production Ready, Test Tool, Extension Needed
qualityString=Production Ready
# This is one of the following:  productionReady, testTool, extensionNeeded
quality=production

description=This code will act as a driver for an EFM8SB1 Gesture sensor.  It requires a callback (usually an irq's ISR) to be defined as the SB1_ISR macro in board.h.  It will implement the gestureReceived callback, which will deliver an enumerated gesture type (as defined in sb1-gesture-sensor.h) whenever a gesture is received.

providedApis=sb1-gesture-sensor
api.sb1-gesture-sensor.header=$PLUGIN/plugin-common/sb1-gesture-sensor/sb1-gesture-sensor.h

architecture=efr32,em341,em342,em346,em351,em355,em3555,em357,em3581,em3582,em3585,em3586,em3587,em3588,em3591,em3592,em3595,em3596,em3597,em3598,simulation

requiredPlugins=i2c-driver, generic-interrupt-control

$PLUGIN/plugin-common/sb1-gesture-sensor/sb1-gesture-sensor.c (efr32,em341,em342,em346,em351,em355,em3555,em357,em3581,em3582,em3585,em3586,em3587,em3588,em3591,em3592,em3595,em3596,em3597,em3598)
$PLUGIN/plugin-common/sb1-gesture-sensor-stub/sb1-gesture-sensor-stub.c (simulation)

callbacks=$PLUGIN/plugin-common/sb1-gesture-sensor/callback.info

# List of callbacks implemented by this plugin
implementedCallbacks=emberAfPluginSb1GestureSensorInitCallback

# Included by default because the HAL configuration tab enables the button handling by default.
includedByDefault=false

events=MessageReady
