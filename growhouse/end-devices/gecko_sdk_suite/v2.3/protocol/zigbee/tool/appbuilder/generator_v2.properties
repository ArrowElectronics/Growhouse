# Generation properties
prompt=ZA_PROMPT

# Manufacturer code
mfgCode=EMBER_AF_MANUFACTURER_CODE

securityProfileNone=EMBER_AF_SECURITY_PROFILE_NONE
hasSecurityProfileNone=EMBER_AF_HAS_SECURITY_PROFILE_NONE
securityProfileHA=EMBER_AF_SECURITY_PROFILE_HA
hasSecurityProfileHa=EMBER_AF_HAS_SECURITY_PROFILE_HA
securityProfileHa12=EMBER_AF_SECURITY_PROFILE_HA12
hasSecurityProfileHa12=EMBER_AF_HAS_SECURITY_PROFILE_HA12
securityProfileSETest=EMBER_AF_SECURITY_PROFILE_SE_TEST
hasSecurityProfileSeTest=EMBER_AF_HAS_SECURITY_PROFILE_SE_TEST
securityProfileSEFull=EMBER_AF_SECURITY_PROFILE_SE_FULL
hasSecurityProfileSe=EMBER_AF_HAS_SECURITY_PROFILE_SE_FULL
securityProfileCustom=EMBER_AF_SECURITY_PROFILE_CUSTOM
hasSecurityProfileCustom=EMBER_AF_HAS_SECURITY_PROFILE_CUSTOM
securityProfileZ3=EMBER_AF_SECURITY_PROFILE_Z3
hasSecurityProfileZ3=EMBER_AF_HAS_SECURITY_PROFILE_Z3
emberStackProfile=EMBER_STACK_PROFILE
keyTableSize=EMBER_KEY_TABLE_SIZE

endpointConfig=ATTRIBUTE_STORAGE_CONFIGURATION

# Custom token header to be included in app/framework/util/token.h with a
# path relative to the generation location which will be placed in the 
# token path template.
tokenPath=CUSTOM_TOKEN_HEADER
# Directory where the custom token header is included from, used to 
# calculate proper relative path.
tokenIncluder=app/framework/util/

defaultGenerationDirectory=app/builder/

# Relative file names. {0} and {name} is replaced with device nam, {microPath} with micro path.
# YOU MUST USE forward slashes '/' here.
# Please do not put any windows back-slashes!

zclHeaderFile=app/builder/{0}/{0}.h
boardFile=app/builder/{0}/{0}_board.h
endpointConfigFile=app/builder/{0}/{0}_endpoint_config.h
callbackStubs=app/builder/{0}/{0}_callbacks.c
tokenFile=app/builder/{0}/{0}_tokens.h

cliFull=ZA_CLI_FULL

powerMode=EMBER_AF_TX_POWER_MODE
defaultPowerMode=EMBER_TX_POWER_MODE_DEFAULT
boostPowerMode=EMBER_TX_POWER_MODE_BOOST
alternatePowerMode=EMBER_TX_POWER_MODE_ALTERNATE
boostAlternateMode=EMBER_TX_POWER_MODE_BOOST_AND_ALTERNATE
txPowerModeUseToken=EMBER_TX_POWER_MODE_USE_TOKEN
networkCount=EMBER_SUPPORTED_NETWORKS
networkIndexDefault=EMBER_AF_DEFAULT_NETWORK_INDEX
generatedNetworkTypes=EM_AF_GENERATED_NETWORK_TYPES
generatedZigbeeProNetworks=EM_AF_GENERATED_ZIGBEE_PRO_NETWORKS
generatedNetworkStrings=EM_AF_GENERATED_NETWORK_STRINGS
hasCoordinatorNetwork=EMBER_AF_HAS_COORDINATOR_NETWORK
hasRouterNetwork=EMBER_AF_HAS_ROUTER_NETWORK
hasEndDeviceNetwork=EMBER_AF_HAS_END_DEVICE_NETWORK
hasRxOnWhenIdleNetwork=EMBER_AF_HAS_RX_ON_WHEN_IDLE_NETWORK
hasSleepyNetwork=EMBER_AF_HAS_SLEEPY_NETWORK
networkTypeX=EM_AF_NETWORK_TYPE_{type}

longPoll=EMBER_AF_LONG_POLL
okToSleep=EMBER_AF_OK_TO_SLEEP

# User can set location to the REAL library. If that is set, then
# user location takes precedence of the one defined next. The one here is
# just a fall-back if user doesn't specify anything.
eccEnabledDefine=USE_ECC_STACK
numberOfBindings=EMBER_BINDING_TABLE_SIZE
enableEndDeviceBind=ZA_ENABLE_END_DEV_BIND
enableZdoSerialCommands=EMBER_AF_ENABLE_TX_ZDO

# Common include
commonHeader=app/framework/include/af.h

# Debug macros added to asmDefines and defines
debugOff=DEBUG_OFF
debugFull=DEBUG

# HAL stuff
heartbeatEnable=EMBER_AF_HEARTBEAT_ENABLE
heartbeatLed=EMBER_AF_HEARTBEAT_LED

# These turn on/off the certain features
custom_board_header=true
support_cluster_functions=true
support_manufacturer_code=true
enhanced_client_api=true
plugins_have_quality_label=true
has_string_length=true
multiple_spec_versions=true
default_response_policy=true
power_mode_configuration=true
cli_grouping=true
profiles_map=true
multi_networks=true
endpoint_reset=true
has_bug_13464=false
has_bug_14347=false
has_bug_14516=false
has_bug_cli_arg_desc_compiled_in_ram=false
support_pre_attribute_changed=true
avoid_all_zero_defaults=true
cli_generation=true
libraries_are_plugins=true
consolidate_callbacks=true
zigbee_3_constants=true
zigbee_3_security=true
efr32_family_specific_libraries=true
simulation_compiles_all_debug_prints=true
afv2_bookkeeping=true
use_rail_phy_on_efr32=true
use_generated_token_header=true
generate_postbuild_file=true
generate_prebuild_file=true
generate_relative_pre_post_build_paths=true
add_toolchain_to_architecture=true
generate_board_header_define=true
support_gcc_in_ember_parts=false
default_reporting_configuration=true
nvm3_token_support=true
apply_z3_security=true

# The hw_config generator feature below was originally used in the ZNet 5.7.3 GA
# to 1) display the hwConfig setup UI to the user and 2) run the hwConfig setup
# generation when requested by the user. In the 2017 Q3 GA, we revamped the
# Hardware Configurator integration with AppBuilder, and so we now use a
# different hook to enable HW Configurator integration: if the hwConfig setup is
# required by a framework, then we turn on the HW Configurator feature.
hw_config=false

# Default response policies
defaultResponseNever=EMBER_AF_DEFAULT_RESPONSE_POLICY_NEVER
defaultResponseConditional=EMBER_AF_DEFAULT_RESPONSE_POLICY_CONDITIONAL
defaultResponseAlways=EMBER_AF_DEFAULT_RESPONSE_POLICY_ALWAYS

# Location of the Image-builder program for writing ZigBee OTA files, and the arguments to it.
# Will only be used if user selects bootloader and the correct ZigBee OTA Client plugins.
imageBuilderLocationInstalledStack=tool/image-builder/image-builder{ecc}-windows.exe
imageBuilderLocationSourceControlStack=tool/ota/image-builder/build.windows/image-builder{ecc}.exe
# %TARGET_BPATH% is a BATCH file variable (see em35x-postbuild.bat)
# We do NOT need to escape backslashes here.
imageBuilderArgs= --create "%TARGET_BPATH%.ota" --version {version} --manuf-id {manufacturer_id} --image-type {image_type} --tag-id 0x0000 --tag-file "{ebl_output}" --string "{encrypted_keyword}EBL {0}"

# This controls what is put in place of the 'const' qualifier for certain variables.
# It is nice to have a define in place of a bare 'const' keyword so that it is possible
# to redefine the types for the variables.  This might be used in the case of a platform that
# needs compiler attributes set on those variables (such as the AVR and the '__farflash'
# qualifier), or even to completely remove the const qualifier for certain systems compiling
# position independent code.
constKeyword=PGM

# This key specifies the naming scheme for the C types.
# There are 2 built-in values: ember and standard
# Default value is 'ember' so backward stacks are supported without this key.
# 
namingScheme=standard

# This key specifies the versioning scheme for the stack.
# Old AFV2 stacks used [stackName][Major][Minor] for the stack id and ISD cannot have 
# two known stacks with the same ids. This meant that only major and minor versions 
# of a stack could live side by side in ISD. Newer versions of the stacks can support 
# the full versioning major.minor.patch.build
#
# There are 2 built-in values: majorMinor and full
# Default value is 'majorMinor' so backward stacks are supported without this key.
should_use_full_version=true

# This key specifies the format of the header guard in generated C header files.
# The base name of the header guard macro, signified by %s, can be formatted with
# an arbitrary prefix and/or suffix. If this key is not defined, the header
# guard format will be the legacy format __%s__. This format is discouraged
# because it violates MISRAC2012 Rule 21.1; identifiers with double leading
# underscore, or single leading underscore followed by an alphabetic character,
# are reserved for use by implementations of C compilers and standard libraries.
headerGuardFormat=SILABS_%s
