#ISD afv6
# Simplicity Studio version: 5.1.1.201812141635-1403

# Application configuration
appId: btmesh
frameworkRoot: app/bluetooth/appbuilder/fwk-mesh
architecture: efr32~family[M]~series[1]~device_configuration[3]~performance[P]~radio[632]~flash[512K]~temp[G]~package[M]~pins[48]~module[MGM13P02F512GA]+BRD4306C+gcc
exactArchitectureToolchain: com.silabs.ss.tool.ide.arm.toolchain.gnu.cdt:7.2.1.20170904
deviceName: LED_Node_BLE
sourceSampleAppId: soc-btmesh-light
generationDirectory: PATH(ISC_RELATIVE):.

# Devices

# UI customization
hiddenLayoutElements: plugins,callbacks,other,radio

# Plugin configuration
appPlugin: mpsi=false
appPlugin: mpsi-ipc=false
appPlugin: mpsi-storage=false
appPlugin: slot-manager=false

# Setup configurations
{setupId:additionalFiles
}
{setupId:bleGattConfigurator
<?xml version="1.0" encoding="UTF-8"?><gatt generic_attribute_service="true" header="gatt_db.h" name="Custom BLE GATT" out="gatt_db.c" prefix="gattdb_">
  <capabilities_declare>
    <capability enable="false">mesh_provisioning_service</capability>
    <capability enable="false">mesh_proxy_service</capability>
    <capability enable="false">mesh_default</capability>
  </capabilities_declare>
  <service advertise="false" name="Generic Access" requirement="mandatory" sourceId="org.bluetooth.service.generic_access" type="primary" uuid="1800">
    <informativeText>Abstract:  The generic_access service contains generic information about the device. All available Characteristics are readonly.  </informativeText>
    <capabilities>
      <capability>mesh_default</capability>
    </capabilities>
    <characteristic id="device_name" name="Device Name" sourceId="org.bluetooth.characteristic.gap.device_name" uuid="2A00">
      <informativeText/>
      <value length="20" type="utf-8" variable_length="true">BlueGecko Mesh Demo </value>
      <properties const="false" const_requirement="optional" read="true" read_requirement="mandatory"/>
    </characteristic>
    <characteristic name="Appearance" sourceId="org.bluetooth.characteristic.gap.appearance" uuid="2A01">
      <informativeText>Abstract:  The external appearance of this device. The values are composed of a category (10-bits) and sub-categories (6-bits).  </informativeText>
      <value length="2" type="hex" variable_length="false">4003</value>
      <properties const="true" const_requirement="optional" read="true" read_requirement="mandatory"/>
    </characteristic>
  </service>
  <service advertise="false" id="manufacturer" name="Device Information" requirement="mandatory" sourceId="org.bluetooth.service.device_information" type="primary" uuid="180A">
    <informativeText>Abstract:  The Device Information Service exposes manufacturer and/or vendor information about a device.  Summary:  This service exposes manufacturer information about a device. The Device Information Service is instantiated as a Primary Service. Only one instance of the Device Information Service is exposed on a device.  </informativeText>
    <capabilities>
      <capability>mesh_default</capability>
    </capabilities>
    <characteristic id="fw_version" name="Firmware Revision String" sourceId="org.bluetooth.characteristic.firmware_revision_string" uuid="2A26">
      <description>The value of this characteristic is a UTF-8 string representing the firmware revision for the firmware within the device.</description>
      <informativeText>Custom characteristic</informativeText>
      <value length="36" type="utf-8" variable_length="true">btl_version: 1, App_version: 1</value>
      <properties const="false" const_requirement="optional" read="true" read_requirement="mandatory"/>
    </characteristic>
    <characteristic name="Manufacturer Name String" sourceId="org.bluetooth.characteristic.manufacturer_name_string" uuid="2A29">
      <informativeText>Abstract:  The value of this characteristic is a UTF-8 string representing the name of the manufacturer of the device.  </informativeText>
      <value length="12" type="utf-8" variable_length="false">Silicon Labs</value>
      <properties const="true" const_requirement="optional" read="true" read_requirement="mandatory"/>
    </characteristic>
    <characteristic id="led_config" name="LED Config" sourceId="custom.type" uuid="6c4edaeb-fb6b-4d0a-ac18-68c05d94619b">
      <informativeText>Custom characteristic</informativeText>
      <value length="7" type="hex" variable_length="false">0x4E4E4E4E4E4E00</value>
      <properties notify="true" notify_requirement="mandatory" read="true" read_requirement="mandatory" write="true" write_requirement="mandatory"/>
    </characteristic>
    <characteristic id="led_intensity" name="LED Intensity" sourceId="custom.type" uuid="05795a39-f062-4d8b-aea0-bc13361c55d8">
      <informativeText>Custom characteristic</informativeText>
      <value length="6" type="hex" variable_length="false">0x000000000000</value>
      <properties notify="true" notify_requirement="mandatory" read="true" read_requirement="mandatory" write="true" write_requirement="mandatory"/>
    </characteristic>
    <characteristic id="node_reset" name="Node Factory Reset" sourceId="custom.type" uuid="ef1c1bf8-59d3-403a-95b9-1d5a9e0233b5">
      <description>Write HEX 0x01 for node factory reset</description>
      <informativeText>Custom characteristic</informativeText>
      <value length="1" type="hex" variable_length="false">0x00</value>
      <properties notify="true" notify_requirement="mandatory" read="true" read_requirement="mandatory" write="true" write_requirement="mandatory"/>
    </characteristic>
    <characteristic id="led_flashing" name="LED Flashing" sourceId="custom.type" uuid="895c6f19-995e-431a-9560-918f3aeeb18f">
      <description>LED Flashing Command</description>
      <informativeText>Custom characteristic</informativeText>
      <value length="1" type="hex" variable_length="false">0x00</value>
      <properties notify="true" notify_requirement="mandatory" read="true" read_requirement="mandatory" write="true" write_requirement="mandatory"/>
    </characteristic>
  </service>
  <service advertise="false" name="Mesh Provisioning Service" requirement="mandatory" sourceId="com.silabs.service.mesh_provisioning" type="primary" uuid="1827">
    <informativeText>Abstract:  The Mesh Provisioning Service allows a Provisioning Client to provision a Provisioning Server to allow it to participate in the mesh network.  </informativeText>
    <capabilities>
      <capability>mesh_provisioning_service</capability>
    </capabilities>
    <characteristic name="Mesh Provisioning Data In" sourceId="com.silabs.characteristic.mesh_provisioning_data_in" uuid="2adb">
      <informativeText>Abstract:  The Mesh Provisioning Data In characteristic can be written to send a Proxy PDU message containing Provisioning PDU to the Provisioning Server.  </informativeText>
      <value length="0" type="user" variable_length="false"/>
      <properties write_no_response="true" write_no_response_requirement="mandatory"/>
    </characteristic>
    <characteristic name="Mesh Provisioning Data Out" sourceId="com.silabs.characteristic.mesh_provisioning_data_out" uuid="2adc">
      <informativeText>Abstract:  The Mesh Provisioning Data Out characteristic can be notified to send a Proxy PDU message containing Provisioning PDU from a Provisioning Server to a Provisioning Client.  </informativeText>
      <value length="0" type="user" variable_length="false"/>
      <properties notify="true" notify_requirement="mandatory"/>
    </characteristic>
  </service>
  <service advertise="false" name="Mesh Proxy Service" requirement="mandatory" sourceId="com.silabs.service.mesh_proxy" type="primary" uuid="1828">
    <informativeText>Abstract:  The Mesh Proxy Service is used to enable a server to send and receive Proxy PDUs with a client.  </informativeText>
    <capabilities>
      <capability>mesh_proxy_service</capability>
    </capabilities>
    <characteristic name="Mesh Proxy Data In" sourceId="com.silabs.characteristic.mesh_proxy_data_in" uuid="2add">
      <informativeText>Abstract:  The Mesh Proxy Data In characteristic is used by the client to send Proxy PDUs to the server  </informativeText>
      <value length="0" type="user" variable_length="false"/>
      <properties write_no_response="true" write_no_response_requirement="mandatory"/>
    </characteristic>
    <characteristic name="Mesh Proxy Data Out" sourceId="com.silabs.characteristic.mesh_proxy_data_out" uuid="2ade">
      <informativeText>Abstract:  The Mesh Proxy Data Out characteristic is used by the server to send Proxy PDUs to the client.  </informativeText>
      <value length="0" type="user" variable_length="false"/>
      <properties notify="true" notify_requirement="mandatory"/>
    </characteristic>
  </service>
  <service advertise="false" name="Silicon Labs OTA" requirement="mandatory" sourceId="com.silabs.service.ota" type="primary" uuid="1D14D6EE-FD63-4FA1-BFA4-8F47B42119F0">
    <informativeText>Abstract: The Silicon Labs OTA Service enables over-the-air firmware update of the device. </informativeText>
    <capabilities>
      <capability>mesh_default</capability>
    </capabilities>
    <characteristic id="ota_control" name="Silicon Labs OTA Control" sourceId="com.silabs.characteristic.ota_control" uuid="F7BF3564-FB6D-4E53-88A4-5E37E0326063">
      <informativeText>Abstract: Silicon Labs OTA Control. </informativeText>
      <value length="1" type="user" variable_length="false"/>
      <properties write="true" write_requirement="optional"/>
    </characteristic>
  </service>
</gatt>
}
{setupId:btMeshConfigurator
\{
  "COMMENT": "",
  "Composition Data": \{
    "CID": "0x02ff",
    "PID": "0xf0b0",
    "VID": "0x1234",
    "CRPL": "0x0020",
    "Features": "0x0007",
    "Elements": [
      \{
        "Name": "Primary Element",
        "Loc": "0x0000",
        "NumS": "11",
        "NumV": "0",
        "SIG Models": [
          "1004",
          "Generic Default Transition Time Server",
          "1006",
          "Generic Power OnOff Server",
          "1304",
          "Light CTL Setup Server",
          "2",
          "Health Server",
          "1002",
          "Generic Level Server",
          "1301",
          "Light Lightness Setup Server",
          "0",
          "Configuration Server",
          "1303",
          "Light CTL Server",
          "1000",
          "Generic OnOff Server",
          "1300",
          "Light Lightness Server",
          "1007",
          "Generic Power OnOff Setup Server"]
        ,
        "Vendor Models": [
          ]
      \},
      \{
        "Name": "Secondary Element",
        "Loc": "0x0000",
        "NumS": "2",
        "NumV": "0",
        "SIG Models": [
          "1002",
          "Generic Level Server",
          "1306",
          "Light CTL Temperature Server"]
        ,
        "Vendor Models": [
          ]
      \}]
  \},
  "Memory configuration": \{
    "MAX_ELEMENTS": "2",
    "MAX_MODELS": "13",
    "MAX_APP_BINDS": "4",
    "MAX_SUBSCRIPTIONS": "4",
    "MAX_NETKEYS": "4",
    "MAX_APPKEYS": "4",
    "MAX_DEVKEYS": "1",
    "NET_CACHE_SIZE": "16",
    "RPL_SIZE": "32",
    "MAX_SEND_SEGS": "4",
    "MAX_RECV_SEGS": "4",
    "MAX_VAS": "4",
    "MAX_PROV_SESSIONS": "2",
    "MAX_PROV_BEARERS": "2",
    "MAX_GATT_CONNECTIONS": "3",
    "GATT_TXQ_SIZE": "4",
    "MAX_PROVISIONED_DEVICES": "0",
    "MAX_PROVISIONED_DEVICE_NETKEYS": "0",
    "MAX_PROVISIONED_DEVICE_APPKEYS": "0",
    "MAX_FOUNDATION_CLIENT_CMDS": "0",
    "MAX_FRIENDSHIPS": "1",
    "FRIEND_MAX_SUBS_LIST": "5",
    "FRIEND_MAX_TOTAL_CACHE": "5",
    "FRIEND_MAX_SINGLE_CACHE": "5"
  \}
\}
}
{setupId:callbackConfiguration
}
{setupId:hwConfig
featureLevel=1
active=true
}
{setupId:macros
}
{setupId:mpsi
- mappings
- custom messages
}
{setupId:quizz
}

# Plugin options
