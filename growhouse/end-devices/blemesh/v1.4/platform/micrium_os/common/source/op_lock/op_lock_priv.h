/***************************************************************************//**
 * @file
 * @brief Common - Operation Locks (Oplocks)
 *******************************************************************************
 * # License
 * <b>Copyright 2018 Silicon Laboratories Inc. www.silabs.com</b>
 *******************************************************************************
 *
 * The licensor of this software is Silicon Laboratories Inc.  Your use of this
 * software is governed by the terms of Silicon Labs Master Software License
 * Agreement (MSLA) available at
 * www.silabs.com/about-us/legal/master-software-license-agreement.  This
 * software is distributed to you in Source Code format and is governed by the
 * sections of the MSLA applicable to Source Code.
 *
 ******************************************************************************/

/********************************************************************************************************
 ********************************************************************************************************
 *                                               MODULE
 ********************************************************************************************************
 *******************************************************************************************************/

#ifndef  _OP_LOCK_PRIV_H_
#define  _OP_LOCK_PRIV_H_

/********************************************************************************************************
 ********************************************************************************************************
 *                                               INCLUDE FILES
 ********************************************************************************************************
 *******************************************************************************************************/

#include  <common/source/kal/kal_priv.h>
#include  <cpu/include/cpu.h>

#include  <common/include/rtos_path.h>
#include  <rtos_description.h>

/********************************************************************************************************
 ********************************************************************************************************
 *                                               DEFINES
 ********************************************************************************************************
 *******************************************************************************************************/

#define  OP_LOCK_TIMEOUT_INFINITE                   KAL_TIMEOUT_INFINITE

/********************************************************************************************************
 ********************************************************************************************************
 *                                               DATA TYPES
 ********************************************************************************************************
 *******************************************************************************************************/

#ifdef  RTOS_MODULE_FS_AVAIL
typedef CPU_INT32U OP_LOCK_BITMAP;
#else
typedef CPU_INT08U OP_LOCK_BITMAP;
#endif

typedef struct op_lock_op_desc {                                // ------------------ OP LOCK OP DESC -----------------
  OP_LOCK_BITMAP Policy;
  OP_LOCK_BITMAP Mask;
} OP_LOCK_OP_DESC;

typedef struct op_lock {                                        // --------------------- OP LOCK ----------------------
  KAL_MON_HANDLE Mon;
  OP_LOCK_BITMAP OpCnt;
} OP_LOCK;

/********************************************************************************************************
 ********************************************************************************************************
 *                                           FUNCTION PROTOTYPES
 ********************************************************************************************************
 *******************************************************************************************************/

void OpLockCreate(OP_LOCK  *p_op_lock,
                  RTOS_ERR *p_err);

void OpLockAcquire(OP_LOCK         *p_op_lock,
                   OP_LOCK_OP_DESC *p_op_desc,
                   CPU_INT32U      timeout_ms,
                   RTOS_ERR        *p_err);

void OpLockRelease(OP_LOCK         *p_op_lock,
                   OP_LOCK_OP_DESC *p_op_desc);

void OpLockDel(OP_LOCK *p_op_lock);

/********************************************************************************************************
 ********************************************************************************************************
 *                                               MODULE END
 ********************************************************************************************************
 *******************************************************************************************************/

#endif // End of private op lock module include.
