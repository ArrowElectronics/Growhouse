from . import halconfig_types as types
from . import halconfig_dependency as dep

name = "CMU"
description = "Clock Management Unit. Configure clock sources for the device."
compatibility = dep.Dependency()  # all
peripheral = 'CMU'
options = {
    "HAL_CLK_HFCLK_SOURCE": {
        "type": "enum",
        "description": "HF clock source",
        "values": [
            types.EnumValue('HAL_CLK_HFCLK_SOURCE_HFRCO', 'HFRCO (High frequency RC oscillator)', compatibility),
            types.EnumValue('HAL_CLK_HFCLK_SOURCE_HFXO', 'HFXO (High frequency crystal oscillator)', compatibility),
            types.EnumValue('HAL_CLK_HFCLK_SOURCE_FSRCO', 'FSRCO (Fast startup RC oscillator)', dep.Dependency(platform=dep.Platform.SERIES2)),
        ],
        "subcategory": "Clock Sources",
        "longdescription": "Clock source for the High Frequency clock tree",
    },
    "HAL_CLK_LFACLK_SOURCE": {
        "type": "enum",
        "description": "LFA clock source",
        "values": [types.EnumValue('HAL_CLK_LFCLK_SOURCE_DISABLED', 'Disabled', compatibility),
                   types.EnumValue('HAL_CLK_LFCLK_SOURCE_LFRCO', 'LFRCO (Low frequency RC oscillator)', compatibility),
                   types.EnumValue('HAL_CLK_LFCLK_SOURCE_LFXO', 'LFXO (Low frequency crystal oscillator)', compatibility),
                   types.EnumValue('HAL_CLK_LFCLK_SOURCE_ULFRCO', 'ULFRCO (Ultra low frequency crystal oscillator)', compatibility),
                   types.EnumValue('HAL_CLK_LFCLK_SOURCE_HFLE', 'HFLE (Low energy high frequency clock)', dep.Dependency(platform=dep.Platform.SERIES0))],
        "subcategory": "Clock Sources",
        "dependency": dep.Dependency(platform=(dep.Platform.SERIES0, dep.Platform.SERIES1)),
        "longdescription": "Clock source for the Low Frequency A clock tree",
    },
    "HAL_CLK_LFBCLK_SOURCE": {
        "type": "enum",
        "description": "LFB clock source",
        "values": [types.EnumValue('HAL_CLK_LFCLK_SOURCE_DISABLED', 'Disabled', compatibility),
                   types.EnumValue('HAL_CLK_LFCLK_SOURCE_LFRCO', 'LFRCO (Low frequency RC oscillator)', compatibility),
                   types.EnumValue('HAL_CLK_LFCLK_SOURCE_LFXO', 'LFXO (Low frequency crystal oscillator)', compatibility),
                   types.EnumValue('HAL_CLK_LFCLK_SOURCE_ULFRCO', 'ULFRCO (Ultra low frequency crystal oscillator)', compatibility),
                   types.EnumValue('HAL_CLK_LFCLK_SOURCE_HFLE', 'HFLE (Low energy high frequency clock)', compatibility)],
        "subcategory": "Clock Sources",
        "dependency": dep.Dependency(platform=(dep.Platform.SERIES0, dep.Platform.SERIES1)),
        "longdescription": "Clock source for the Low Frequency B clock tree",
    },
    "HAL_CLK_LFCCLK_SOURCE": {
        "type": "enum",
        "description": "LFC clock source",
        "values": [types.EnumValue('HAL_CLK_LFCLK_SOURCE_DISABLED', 'Disabled', compatibility),
                   types.EnumValue('HAL_CLK_LFCLK_SOURCE_LFRCO', 'LFRCO (Low frequency RC oscillator)', compatibility),
                   types.EnumValue('HAL_CLK_LFCLK_SOURCE_LFXO', 'LFXO (Low frequency crystal oscillator)', compatibility)],
        "subcategory": "Clock Sources",
        "dependency": dep.Dependency(sdid=[77,100,106]),
        "longdescription": "Clock source for the Low Frequency C clock tree",
    },
    "HAL_CLK_LFECLK_SOURCE": {
        "type": "enum",
        "description": "LFE clock source",
        "values": [types.EnumValue('HAL_CLK_LFCLK_SOURCE_DISABLED', 'Disabled', compatibility),
                   types.EnumValue('HAL_CLK_LFCLK_SOURCE_LFRCO', 'LFRCO (Low frequency RC oscillator)', compatibility),
                   types.EnumValue('HAL_CLK_LFCLK_SOURCE_LFXO', 'LFXO (Low frequency crystal oscillator)', compatibility),
                   types.EnumValue('HAL_CLK_LFCLK_SOURCE_ULFRCO', 'ULFRCO (Ultra low frequency crystal oscillator)', compatibility)],
        "subcategory": "Clock Sources",
        "dependency": dep.Dependency(platform=dep.Platform.SERIES1),
        "longdescription": "Clock source for the Low Frequency E clock tree",
    },
    "HAL_CLK_EM23CLK_SOURCE": {
        "type": "enum",
        "description": "EM2 and 3 clock source",
        "values": [types.EnumValue('HAL_CLK_LFCLK_SOURCE_DISABLED', 'Disabled'),
                   types.EnumValue('HAL_CLK_LFCLK_SOURCE_LFRCO', 'LFRCO (Low frequency RC oscillator)'),
                   types.EnumValue('HAL_CLK_LFCLK_SOURCE_LFXO', 'LFXO (Low frequency crystal oscillator)'),
                   types.EnumValue('HAL_CLK_LFCLK_SOURCE_ULFRCO', 'ULFRCO (Ultra low frequency crystal oscillator')],
        "subcategory": "Clock Sources",
        "dependency": dep.Dependency(platform=dep.Platform.SERIES2),
        "longdescription": "Clock source for the low frequency EM23 clock tree", 
    },
    "HAL_CLK_EM4CLK_SOURCE": {
        "type": "enum",
        "description": "EM4 clock source",
        "values": [types.EnumValue('HAL_CLK_LFCLK_SOURCE_DISABLED', 'Disabled'),
                   types.EnumValue('HAL_CLK_LFCLK_SOURCE_LFRCO', 'LFRCO (Low frequency RC oscillator)'),
                   types.EnumValue('HAL_CLK_LFCLK_SOURCE_LFXO', 'LFXO (Low frequency crystal oscillator)'),
                   types.EnumValue('HAL_CLK_LFCLK_SOURCE_ULFRCO', 'ULFRCO (Ultra low frequency crystal oscillator')],
        "subcategory": "Clock Sources",
        "dependency": dep.Dependency(platform=dep.Platform.SERIES2),
        "longdescription": "Clock source for the low frequency EM4 clock tree", 
    },
    "HAL_CLK_RTCCCLK_SOURCE": {
        "type": "enum",
        "description": "RTCC clock source",
        "values": [types.EnumValue('HAL_CLK_LFCLK_SOURCE_DISABLED', 'Disabled'),
                   types.EnumValue('HAL_CLK_LFCLK_SOURCE_LFRCO', 'LFRCO (Low frequency RC oscillator)'),
                   types.EnumValue('HAL_CLK_LFCLK_SOURCE_LFXO', 'LFXO (Low frequency crystal oscillator)'),
                   types.EnumValue('HAL_CLK_LFCLK_SOURCE_ULFRCO', 'ULFRCO (Ultra low frequency crystal oscillator')],
        "subcategory": "Clock Sources",
        "dependency": dep.Dependency(platform=dep.Platform.SERIES2),
        "longdescription": "Clock source for the low frequency RTCC clock tree", 
    },
    "HAL_CLK_PLL_CONFIGURATION": {
        "type": "enum",
        "description": "PLL configuration",
        "values": [types.EnumValue('HAL_CLK_PLL_CONFIGURATION_NONE', 'Do not use PLL'),
                   types.EnumValue('HAL_CLK_PLL_CONFIGURATION_40MHZ', '40MHz from LFXO'),
                   types.EnumValue('HAL_CLK_PLL_CONFIGURATION_80MHZ', '80MHz from HFXO')],
        "subcategory": "Clock Sources",
        "longdescription": "Use the Digital Phase-Locked Loop with the HFRCO to generate the HF clock from a reference clock source",
        "dependency": dep.Dependency(platform=dep.Platform.SERIES2),
        "generate_if_hidden": False,
    },
    "BSP_CLK_HFXO_PRESENT": {
        "type": "boolean",
        "description": "HFXO present on board",
        "subcategory": "HFXO",
        "longdescription": "The PCB has a high frequency crystal oscillator wired to the HFXI/HFXO pins.",
        "generate_if_hidden": False,
    },
    "BSP_CLK_HFXO_FREQ": [
        {
            "type": "uint32_t",
            "description": "HFXO frequency",
            "min": "0",
            "max": "40000000",
            "defaultValue": "38400000",
            "subcategory": "HFXO",
            "dependency": dep.Dependency(sdid=[80,84,89,95,200]),
            "longdescription": "Frequency of the HFXO (Hz)",
            "generate_if_hidden": False,
            "overrideDefaultValue": {
                "zgm13": "39000000",
                "efr32zg14": "39000000"
            }
        },
        {
            "type": "uint32_t",
            "description": "HFXO frequency",
            "min": "0",
            "max": "50000000",
            "defaultValue": "50000000",
            "subcategory": "HFXO",
            "dependency": dep.Dependency(sdid=[100,106]),
            "longdescription": "Frequency of the HFXO (Hz)",
            "generate_if_hidden": False,
        },
        {
            "type": "uint32_t",
            "description": "HFXO frequency",
            "min": "0",
            "max": "32000000",
            "defaultValue": "32000000",
            "subcategory": "HFXO",
            "dependency": dep.Dependency(sdid=[71,73]),
            "longdescription": "Frequency of the HFXO (Hz)",
            "generate_if_hidden": False,
        },
        {
            "type": "uint32_t",
            "description": "HFXO frequency",
            "min": "0",
            "max": "48000000",
            "defaultValue": "48000000",
            "subcategory": "HFXO",
            "dependency": dep.Dependency(sdid=[72,74,103]),
            "longdescription": "Frequency of the HFXO (Hz)",
            "generate_if_hidden": False,
        },
        {
            "type": "uint32_t",
            "description": "HFXO frequency",
            "min": "0",
            "max": "24000000",
            "defaultValue": "24000000",
            "subcategory": "HFXO",
            "dependency": dep.Dependency(sdid=[76,77]),
            "longdescription": "Frequency of the HFXO (Hz)",
            "generate_if_hidden": False,
        },
        # Documentation option
        {
            "type": "uint32_t",
            "description": "HFXO frequency (See datasheet for maximum)",
            "subcategory": "HFXO",
            "documentation": "True",
            "longdescription": "Frequency of the HFXO (Hz)",
            "generate_if_hidden": False,
        },
    ],
    "BSP_CLK_HFXO_INIT": {
        "type": "string",
        "description": "HFXO initialization settings struct",
        "defaultValue": "CMU_HFXOINIT_DEFAULT",
        "subcategory": "HFXO",
        "longdescription": "Settings to initialize the HFXO. The value given here will typically be assigned to a CMU_HFXOInit_TypeDef structure from EMLIB. One way of setting non-default settings for this property, is to set it to the value of a macro that is defined elsewhere. For instance, this property can be set to MY_CUSTOM_HFXO_INIT, and that macro can be #define-ed in the hal-config.h file before the CMU section (taking care to define it outside of the $[...]$ sections that get overwritten when generating).",
        "generate_if_hidden": False,
    },
    "HAL_CLK_HFXO_AUTOSTART": {
        "type": "enum",
        "description": "Start HFXO automatically on EM0/1 entry",
        "values": [
            types.EnumValue('HAL_CLK_HFXO_AUTOSTART_NONE', 'Do not start automatically'),
            types.EnumValue('HAL_CLK_HFXO_AUTOSTART_START', 'Start automatically'),
            types.EnumValue('HAL_CLK_HFXO_AUTOSTART_SELECT', 'Start automatically and select as HFCLK'),
        ],
        "dependency": dep.Dependency(platform=dep.Platform.SERIES1),
        "subcategory": "HFXO",
        "longdescription": "Automatically start HFXO on wakeup from sleep.",
    },
    "BSP_CLK_HFXO_CTUNE": {
        "type": "uint16_t",
        "description": "HFXO CTUNE value",
        "min": "-1",
        "max": "511",
        "defaultValue": "-1",
        "dependency": dep.Dependency(platform=(dep.Platform.SERIES1, dep.Platform.SERIES2)),
        "subcategory": "HFXO",
        "longdescription": "Oscillator tuning value for the high frequency crystal oscillator, only used if no manufacturing token or factory calibrated value. If set to -1, the default value in the init structure is not overridden.",
        "generate_if_hidden": False,
    },
    "BSP_CLK_HFXO_BOOST": {
        "type": "enum",
        "description": "HFXO Boost",
        "values": [
            types.EnumValue('_CMU_CTRL_HFXOBOOST_50PCENT', '50%'),
            types.EnumValue('_CMU_CTRL_HFXOBOOST_70PCENT', '70%'),
            types.EnumValue('_CMU_CTRL_HFXOBOOST_80PCENT', '80%'),
            types.EnumValue('_CMU_CTRL_HFXOBOOST_100PCENT', '100%'),
        ],
        "defaultValue": "100%",
        "dependency": dep.Dependency(platform=dep.Platform.SERIES0),
        "subcategory": "HFXO",
        "longdescription": "Boost value for HFXO",
        "generate_if_hidden": False,
    },

    "BSP_CLK_LFXO_PRESENT": {
        "type": "boolean",
        "description": "LFXO present on board",
        "subcategory": "LFXO",
        "longdescription": "The PCB has a low frequency crystal oscillator wired to the LFXI and LFXO pins.",
        "generate_if_hidden": False,
    },
    "BSP_CLK_LFXO_INIT": {
        "type": "string",
        "description": "LFXO initialization settings struct",
        "defaultValue": "CMU_LFXOINIT_DEFAULT",
        "subcategory": "LFXO",
        "longdescription": "Settings to initialize the LFXO. The value given here will typically be assigned to a CMU_LFXOInit_TypeDef structure from EMLIB. One way of setting non-default settings for this property, is to set it to the value of a macro that is defined elsewhere. For instance, this property can be set to MY_CUSTOM_LFXO_INIT, and that macro can be #define-ed in the hal-config.h file before the CMU section (taking care to define it outside of the $[...]$ sections that get overwritten when generating).",
        "generate_if_hidden": False,
    },
    "BSP_CLK_LFXO_FREQ": {
        "type": "uint32_t",
        "description": "LFXO frequency",
        "min": "0",
        "max": "32768",
        "defaultValue": "32768",
        "subcategory": "LFXO",
        "longdescription": "Frequency of the low frequency crystal oscillator",
        "generate_if_hidden": False,
    },
    "BSP_CLK_LFXO_CTUNE": {
        "type": "uint16_t",
        "description": "LFXO CTUNE value",
        "min": "0",
        "max": "511",
        "defaultValue": "0",
        "subcategory": "LFXO",
        "dependency": dep.Dependency(platform=(dep.Platform.SERIES1, dep.Platform.SERIES2)),
        "longdescription": "Oscillator tuning value for LFXO",
        "generate_if_hidden": False,
    },
    "BSP_CLK_LFXO_BOOST": {
        "type": "enum",
        "description": "LFXO Boost",
        "values": [
            types.EnumValue('0', '70%'),
            types.EnumValue('2', '100%'),
            types.EnumValue('1', '70% (reduced)', dependency=dep.Dependency(sdid=[72])),
            types.EnumValue('3', '100% (reduced)', dependency=dep.Dependency(sdid=[72])),
        ],
        "dependency": dep.Dependency(platform=dep.Platform.SERIES0),
        "subcategory": "LFXO",
        "longdescription": "Boost value for LFXO",
        "generate_if_hidden": False,
    },
}
