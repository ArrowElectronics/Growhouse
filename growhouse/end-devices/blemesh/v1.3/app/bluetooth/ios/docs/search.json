{"Type Definitions/SBMLogLevel/.html#/c:@EA@SBMLogLevel@SBMLogLevelVerbose":{"name":"SBMLogLevelVerbose","abstract":"<p>&lt; Log Level Verbose</p>"},"Type Definitions/SBMLogLevel/.html#/c:@EA@SBMLogLevel@SBMLogLevelDebug":{"name":"SBMLogLevelDebug","abstract":"<p>&lt; Log Level Debug</p>"},"Type Definitions/SBMLogLevel/.html#/c:@EA@SBMLogLevel@SBMLogLevelInfo":{"name":"SBMLogLevelInfo","abstract":"<p>&lt; Log Level Info</p>"},"Type Definitions/SBMLogLevel/.html#/c:@EA@SBMLogLevel@SBMLogLevelWarn":{"name":"SBMLogLevelWarn","abstract":"<p>&lt; Log Level Warn</p>"},"Type Definitions/SBMLogLevel/.html#/c:@EA@SBMLogLevel@SBMLogLevelError":{"name":"SBMLogLevelError","abstract":"<p>&lt; Log Level Error</p>"},"Type Definitions/SBMLogLevel.html":{"name":"SBMLogLevel","abstract":"<p>Undocumented</p>"},"Protocols/SBMLoggerDelegate.html#/c:objc(pl)SBMLoggerDelegate(im)logMessage:withLevel:":{"name":"-logMessage:withLevel:","abstract":"<p>Add implementation for this method to receive logs from the framework.</p>","parent_name":"SBMLoggerDelegate"},"Protocols/SBMBluetoothAdapterDelegate.html#/c:objc(pl)SBMBluetoothAdapterDelegate(im)bluetoothAdapter:gattRequestToGattHandle::":{"name":"-bluetoothAdapter:gattRequestToGattHandle::","abstract":"<p>Request send by Mesh library to prepare Bluetooth connection with the specified Mesh service. GATT connection must be already opened. After this call the platform must do a GATT service discovery, locate the data out characteristic for the requested service, and turn notifications on for it. After this the connection is considered open.</p>","parent_name":"SBMBluetoothAdapterDelegate"},"Protocols/SBMBluetoothAdapterDelegate.html#/c:objc(pl)SBMBluetoothAdapterDelegate(im)bluetoothAdapter:disconnectionRequestToGattHandle:":{"name":"-bluetoothAdapter:disconnectionRequestToGattHandle:","abstract":"<p>Request send by Mesh Library to close a Bluetooth connection.</p>","parent_name":"SBMBluetoothAdapterDelegate"},"Protocols/SBMBluetoothAdapterDelegate.html#/c:objc(pl)SBMBluetoothAdapterDelegate(im)bluetoothAdapter:gattWriteToGattHandle:data:serviceUUID:characteristic:":{"name":"-bluetoothAdapter:gattWriteToGattHandle:data:serviceUUID:characteristic:","abstract":"<p>Request send by Mesh Library to send data over a GATT connection. Send the data to the remote device.</p>","parent_name":"SBMBluetoothAdapterDelegate"},"Protocols/SBMBluetoothAdapterDelegate.html":{"name":"SBMBluetoothAdapterDelegate","abstract":"<p>SBMBluetoothAdapterDelegate it is a delegate used by Mesh library to send messages to Bluetooth devices. It is necessary to prepare implantation for BluetoothAdapter delegate.</p>"},"Protocols/SBMLoggerDelegate.html":{"name":"SBMLoggerDelegate","abstract":"<p>SBMLoggerDelegate delegate for SBMLogger.</p>"},"Enums/SBMGattServiceType.html#/c:@E@SBMGattServiceType@SBMGattServiceTypeProvisioning":{"name":"SBMGattServiceTypeProvisioning","abstract":"<p>&lt; Mesh provisioning service</p>","parent_name":"SBMGattServiceType"},"Enums/SBMGattServiceType.html#/c:@E@SBMGattServiceType@SBMGattServiceTypeProxy":{"name":"SBMGattServiceTypeProxy","abstract":"<p>&lt; Mesh proxy service</p>","parent_name":"SBMGattServiceType"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierConfigurationServer":{"name":"SBMModelIdentifierConfigurationServer","abstract":"<p>&lt; Mesh Model Configuration Server</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierConfigurationClient":{"name":"SBMModelIdentifierConfigurationClient","abstract":"<p>&lt; Mesh Model Configuration Client</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierHealthServer":{"name":"SBMModelIdentifierHealthServer","abstract":"<p>&lt; Mesh Model Health Server</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierHealthClient":{"name":"SBMModelIdentifierHealthClient","abstract":"<p>&lt; Mesh Model Health Client</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierGenericOnOffServer":{"name":"SBMModelIdentifierGenericOnOffServer","abstract":"<p>&lt; Mesh Model Generic OnOff Server</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierGenericOnOffClient":{"name":"SBMModelIdentifierGenericOnOffClient","abstract":"<p>&lt; Mesh Model Generic OnOff Client</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierGenericLevelServer":{"name":"SBMModelIdentifierGenericLevelServer","abstract":"<p>&lt; Mesh Model Generic Level Server</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierGenericLevelClient":{"name":"SBMModelIdentifierGenericLevelClient","abstract":"<p>&lt; Mesh Model Generic Level Client</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierGenericDefaultTransitionTimeServer":{"name":"SBMModelIdentifierGenericDefaultTransitionTimeServer","abstract":"<p>&lt; Mesh Model Generic Default Transition Time Server</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierGenericDefaultTransitionTimeClient":{"name":"SBMModelIdentifierGenericDefaultTransitionTimeClient","abstract":"<p>&lt; Mesh Model Generic Default Transition Time Client</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierGenericPowerOnOffServer":{"name":"SBMModelIdentifierGenericPowerOnOffServer","abstract":"<p>&lt; Mesh Model Generic Power OnOff Server</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierGenericPowerOnOffSetupServer":{"name":"SBMModelIdentifierGenericPowerOnOffSetupServer","abstract":"<p>&lt; Mesh Model Generic Power OnOff Setup Server</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierGenericPowerOnOffClient":{"name":"SBMModelIdentifierGenericPowerOnOffClient","abstract":"<p>&lt; Mesh Model Generic Power OnOff Clientt</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierGenericPowerLevelServer":{"name":"SBMModelIdentifierGenericPowerLevelServer","abstract":"<p>&lt; Mesh Model Generic Power Level Server</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierGenericPowerLevelSetupServer":{"name":"SBMModelIdentifierGenericPowerLevelSetupServer","abstract":"<p>&lt; Mesh Model Generic Power Level Setup Server</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierGenericPowerLevelClient":{"name":"SBMModelIdentifierGenericPowerLevelClient","abstract":"<p>&lt; Mesh Model Generic Power Level Client</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierGenericBatteryServer":{"name":"SBMModelIdentifierGenericBatteryServer","abstract":"<p>&lt; Mesh Model Generic Battery Server</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierGenericBatteryClient":{"name":"SBMModelIdentifierGenericBatteryClient","abstract":"<p>&lt; Mesh Model Generic Battery Client</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierGenericLocationServer":{"name":"SBMModelIdentifierGenericLocationServer","abstract":"<p>&lt; Mesh Model Generic Location Server</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierGenericLocationSetupServer":{"name":"SBMModelIdentifierGenericLocationSetupServer","abstract":"<p>&lt; Mesh Model Generic Location Setup Server</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierGenericLocationClient":{"name":"SBMModelIdentifierGenericLocationClient","abstract":"<p>&lt; Mesh Model Generic Location Client</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierGenericAdminPropertyServer":{"name":"SBMModelIdentifierGenericAdminPropertyServer","abstract":"<p>&lt; Mesh Model Generic Admin Property Server</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierGenericManufacturerPropertyServer":{"name":"SBMModelIdentifierGenericManufacturerPropertyServer","abstract":"<p>&lt; Mesh Model Generic Manufacturer Property Server</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierGenericUserPropertyServer":{"name":"SBMModelIdentifierGenericUserPropertyServer","abstract":"<p>&lt; Mesh Model Generic User Property Server</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierGenericClientPropertyServer":{"name":"SBMModelIdentifierGenericClientPropertyServer","abstract":"<p>&lt; Mesh Model Generic Client Property Server</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierGenericPropertyClient":{"name":"SBMModelIdentifierGenericPropertyClient","abstract":"<p>&lt; Mesh Model Generic Property Client</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierSensorServer":{"name":"SBMModelIdentifierSensorServer","abstract":"<p>&lt; Mesh Model Sensor Server</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierSensorSetupServer":{"name":"SBMModelIdentifierSensorSetupServer","abstract":"<p>&lt; Mesh Model Sensor Setup Server</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierSensorClient":{"name":"SBMModelIdentifierSensorClient","abstract":"<p>&lt; Mesh Model Sensor Client</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierTimeServer":{"name":"SBMModelIdentifierTimeServer","abstract":"<p>&lt; Mesh Model Time Server</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierTimeSetupServer":{"name":"SBMModelIdentifierTimeSetupServer","abstract":"<p>&lt; Mesh Model Time Setup Server</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierTimeClient":{"name":"SBMModelIdentifierTimeClient","abstract":"<p>&lt; Mesh Model Time Clien</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierSceneServer":{"name":"SBMModelIdentifierSceneServer","abstract":"<p>&lt; Mesh Model Scene Server</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierSceneSetupServer":{"name":"SBMModelIdentifierSceneSetupServer","abstract":"<p>&lt; Mesh Model Scene Setup Server</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierSceneClient":{"name":"SBMModelIdentifierSceneClient","abstract":"<p>&lt; Mesh Model Scene Client</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierSchedulerServer":{"name":"SBMModelIdentifierSchedulerServer","abstract":"<p>&lt; Mesh Model Scheduler Server</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierSchedulerSetupServer":{"name":"SBMModelIdentifierSchedulerSetupServer","abstract":"<p>&lt; Mesh Model Scheduler Setup Server</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierSchedulerClient":{"name":"SBMModelIdentifierSchedulerClient","abstract":"<p>&lt; Mesh Model Scheduler Client</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierLightLightnessServer":{"name":"SBMModelIdentifierLightLightnessServer","abstract":"<p>&lt; Mesh Model Light Lightness Server</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierLightLightnessSetupServer":{"name":"SBMModelIdentifierLightLightnessSetupServer","abstract":"<p>&lt; Mesh Model Light Lightness Setup Server</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierLightLightnessClient":{"name":"SBMModelIdentifierLightLightnessClient","abstract":"<p>&lt; Mesh Model Light Lightness Client</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierLightCTLServer":{"name":"SBMModelIdentifierLightCTLServer","abstract":"<p>&lt; Mesh Model Light CTL Server</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierLightCTLSetupServer":{"name":"SBMModelIdentifierLightCTLSetupServer","abstract":"<p>&lt; Mesh Model Light CTL Setup Server</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierLightCTLClient":{"name":"SBMModelIdentifierLightCTLClient","abstract":"<p>&lt; Mesh Model Light CTL Client</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierLightCTLTemperatureServer":{"name":"SBMModelIdentifierLightCTLTemperatureServer","abstract":"<p>&lt; Mesh Model Light CTL Temperature Server</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierLightHSLServer":{"name":"SBMModelIdentifierLightHSLServer","abstract":"<p>&lt; Mesh Model Light HSL Server</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierLightHSLSetupServer":{"name":"SBMModelIdentifierLightHSLSetupServer","abstract":"<p>&lt; Mesh Model HSL Setup Server</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierLightHSLClient":{"name":"SBMModelIdentifierLightHSLClient","abstract":"<p>&lt; Mesh Model Light HSL Client</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierLightHSLHueServer":{"name":"SBMModelIdentifierLightHSLHueServer","abstract":"<p>&lt; Mesh Model HSL Hue Server</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierLightHSLSaturationServer":{"name":"SBMModelIdentifierLightHSLSaturationServer","abstract":"<p>&lt; Mesh Model HSL Saturation Server</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierLightxyLServer":{"name":"SBMModelIdentifierLightxyLServer","abstract":"<p>&lt; Mesh Model Light xyL Server</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierLightxyLSetupServer":{"name":"SBMModelIdentifierLightxyLSetupServer","abstract":"<p>&lt; Mesh Model Light xyL Setup Server</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierLightxyLClient":{"name":"SBMModelIdentifierLightxyLClient","abstract":"<p>&lt; Mesh Model Light xyL Client</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierLightLCServer":{"name":"SBMModelIdentifierLightLCServer","abstract":"<p>&lt; Mesh Model Light LC Server</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierLightLCSetupServer":{"name":"SBMModelIdentifierLightLCSetupServer","abstract":"<p>&lt; Mesh Model Light LC Setup Server</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html#/c:@E@SBMModelIdentifier@SBMModelIdentifierLightLCClient":{"name":"SBMModelIdentifierLightLCClient","abstract":"<p>&lt; Mesh Model Light LC Client</p>","parent_name":"SBMModelIdentifier"},"Enums/SBMModelIdentifier.html":{"name":"SBMModelIdentifier","abstract":"<p>Models specified by Mesh Model Bluetooth® Specification"},"Enums/SBMGattServiceType.html":{"name":"SBMGattServiceType","abstract":"<p>Service type to connect.</p>"},"Constants.html#/c:SBMBluetoothAdapter.h@meshProvisioningServiceUUID":{"name":"meshProvisioningServiceUUID","abstract":"<p>The Mesh Provisioning Service.</p>"},"Constants.html#/c:SBMBluetoothAdapter.h@characteristicMeshProvisioningDataInUUID":{"name":"characteristicMeshProvisioningDataInUUID","abstract":"<p>The Mesh Provisioning Data In characteristic is used to write data to device during provisioning process,</p>"},"Constants.html#/c:SBMBluetoothAdapter.h@characteristicMeshProvisioningDataOutUUID":{"name":"characteristicMeshProvisioningDataOutUUID","abstract":"<p>The Mesh Provisioning Data Out characteristic is used to read data from device during provisioning process.</p>"},"Constants.html#/c:SBMBluetoothAdapter.h@meshProxyServiceUUID":{"name":"meshProxyServiceUUID","abstract":"<p>The Mesh Proxy Service.</p>"},"Constants.html#/c:SBMBluetoothAdapter.h@characteristicMeshProxyDataInUUID":{"name":"characteristicMeshProxyDataInUUID","abstract":"<p>The Mesh Proxy Data In characteristic is used to write data to proxy device.</p>"},"Constants.html#/c:SBMBluetoothAdapter.h@characteristicMeshProxyDataOutUUID":{"name":"characteristicMeshProxyDataOutUUID","abstract":"<p>The Mesh Proxy Data Out characteristic is used to read data from proxy device.</p>"},"Constants.html#/c:@BluetoothMeshVersionNumber":{"name":"BluetoothMeshVersionNumber","abstract":"<p>Project version number for Bluetooth Mesh.</p>"},"Constants.html#/c:@BluetoothMeshVersionString":{"name":"BluetoothMeshVersionString","abstract":"<p>Project version string for Bluetooth Mesh.</p>"},"Classes/SBMBluetoothMesh.html#/c:objc(cs)SBMBluetoothMesh(py)bluetoothAdapter":{"name":"bluetoothAdapter","abstract":"<p>Undocumented</p>","parent_name":"SBMBluetoothMesh"},"Classes/SBMBluetoothMesh.html#/c:objc(cs)SBMBluetoothMesh(im)initialise":{"name":"-initialise","abstract":"<p>Initializes the Bluetooth Mesh Stack in the Bluetooth Mesh Library.</p>","parent_name":"SBMBluetoothMesh"},"Classes/SBMBluetoothMesh.html#/c:objc(cs)SBMBluetoothMesh(im)deinitialise":{"name":"-deinitialise","abstract":"<p>Deinitilizes the Bluetooth Mesh Stack in the Bluetooth Mesh Library.</p>","parent_name":"SBMBluetoothMesh"},"Classes/SBMBluetoothMesh.html#/c:objc(cs)SBMBluetoothMesh(im)connectToProxyWithGattHandle:completion:":{"name":"-connectToProxyWithGattHandle:completion:","abstract":"<p>Attempt a connection to a proxy device. Bluetooth connection already needs to be open and subscription for needed characteristic must to be set.</p>","parent_name":"SBMBluetoothMesh"},"Classes/SBMBluetoothMesh.html#/c:objc(cs)SBMBluetoothMesh(im)provisionDevice:deviceName:deviceUUID:gattHandle:completion:":{"name":"-provisionDevice:deviceName:deviceUUID:gattHandle:completion:","abstract":"<p>Provision a device. Attempts to provision a specified device. Bluetooth connection already needs to be open.</p>","parent_name":"SBMBluetoothMesh"},"Classes/SBMBluetoothMesh.html#/c:objc(cs)SBMBluetoothMesh(im)deviceCompositionDataForNode:completion:":{"name":"-deviceCompositionDataForNode:completion:","abstract":"<p>Get a node&rsquo;s device composition data (DCD). Send a request to a node to retrieve device composition data. Method works only if proxy device is provisioned and connected.</p>","parent_name":"SBMBluetoothMesh"},"Classes/SBMBluetoothMesh.html#/c:objc(cs)SBMBluetoothMesh(im)createNetwork:error:":{"name":"-createNetwork:error:","abstract":"<p>Create a mesh network. From the Bluetooth Mesh specification it is known as create network key.</p>","parent_name":"SBMBluetoothMesh"},"Classes/SBMBluetoothMesh.html#/c:objc(cs)SBMBluetoothMesh(im)getNetworks":{"name":"-getNetworks","abstract":"<p>Return a created networks in the mesh.</p>","parent_name":"SBMBluetoothMesh"},"Classes/SBMBluetoothMesh.html#/c:objc(cs)SBMBluetoothMesh(im)getNodesWithNetwork:":{"name":"-getNodesWithNetwork:","abstract":"<p>Return a nodes from the network.</p>","parent_name":"SBMBluetoothMesh"},"Classes/SBMBluetoothMesh.html#/c:objc(cs)SBMBluetoothMesh(im)removeNetwork:":{"name":"-removeNetwork:","abstract":"<p>Remove a specific network from the mesh. Before this action it is required to factory reset all nodes from the network. Method works only if proxy device is provisioned and connected.</p>","parent_name":"SBMBluetoothMesh"},"Classes/SBMBluetoothMesh.html#/c:objc(cs)SBMBluetoothMesh(im)changeNetwork:name:":{"name":"-changeNetwork:name:","abstract":"<p>Method that sets the name of the network.</p>","parent_name":"SBMBluetoothMesh"},"Classes/SBMBluetoothMesh.html#/c:objc(cs)SBMBluetoothMesh(im)getNodesWithGroup:":{"name":"-getNodesWithGroup:","abstract":"<p>Return a nodes from the group.</p>","parent_name":"SBMBluetoothMesh"},"Classes/SBMBluetoothMesh.html#/c:objc(cs)SBMBluetoothMesh(im)changeGroup:name:":{"name":"-changeGroup:name:","abstract":"<p>Method that sets the name of the group.</p>","parent_name":"SBMBluetoothMesh"},"Classes/SBMBluetoothMesh.html#/c:objc(cs)SBMBluetoothMesh(im)createGroupWithName:inNetwork:error:":{"name":"-createGroupWithName:inNetwork:error:","abstract":"<p>Create group in the network. In Bluetooth Mesh specification it is known as creating application key.</p>","parent_name":"SBMBluetoothMesh"},"Classes/SBMBluetoothMesh.html#/c:objc(cs)SBMBluetoothMesh(im)removeGroup:":{"name":"-removeGroup:","abstract":"<p>Remove a group from the mesh. Before this action it is needed to remove all nodes from this group. Method works only if proxy device is provisioned and connected.</p>","parent_name":"SBMBluetoothMesh"},"Classes/SBMBluetoothMesh.html#/c:objc(cs)SBMBluetoothMesh(im)getGroupsWithNetwork:":{"name":"-getGroupsWithNetwork:","abstract":"<p>Returns groups from network</p>","parent_name":"SBMBluetoothMesh"},"Classes/SBMBluetoothMesh.html#/c:objc(cs)SBMBluetoothMesh(im)add:toGroup:completion:":{"name":"-add:toGroup:completion:","abstract":"<p>Method used to configure a Device&rsquo;s model to a Group. It works only if proxy device is provisioned and connected.</p>","parent_name":"SBMBluetoothMesh"},"Classes/SBMBluetoothMesh.html#/c:objc(cs)SBMBluetoothMesh(im)remove:fromGroup:completion:":{"name":"-remove:fromGroup:completion:","abstract":"<p>Method used to remove a Device&rsquo;s model from a Group. Method works only if proxy device is provisioned and connected.</p>","parent_name":"SBMBluetoothMesh"},"Classes/SBMBluetoothMesh.html#/c:objc(cs)SBMBluetoothMesh(im)change:name:":{"name":"-change:name:","abstract":"<p>Method that sets the name of the device.</p>","parent_name":"SBMBluetoothMesh"},"Classes/SBMBluetoothMesh.html#/c:objc(cs)SBMBluetoothMesh(im)change:functionality:":{"name":"-change:functionality:","abstract":"<p>Method that sets the device&rsquo;s functionality, mainly used for the setting the device&rsquo;s control option in the UI.</p>","parent_name":"SBMBluetoothMesh"},"Classes/SBMBluetoothMesh.html#/c:objc(cs)SBMBluetoothMesh(im)checkProxyForNode:completion:":{"name":"-checkProxyForNode:completion:","abstract":"<p>Method that send request for check device&rsquo;s proxy feature status. Method works only if proxy device is provisioned and connected.</p>","parent_name":"SBMBluetoothMesh"},"Classes/SBMBluetoothMesh.html#/c:objc(cs)SBMBluetoothMesh(im)checkRelayForNode:completion:":{"name":"-checkRelayForNode:completion:","abstract":"<p>Method that send request for check device&rsquo;s relay feature status. Method works only if proxy device is provisioned and connected.</p>","parent_name":"SBMBluetoothMesh"},"Classes/SBMBluetoothMesh.html#/c:objc(cs)SBMBluetoothMesh(im)checkFriendForNode:completion:":{"name":"-checkFriendForNode:completion:","abstract":"<p>Method that send request for check device&rsquo;s friend feature status. Method works only if proxy device is provisioned and connected.</p>","parent_name":"SBMBluetoothMesh"},"Classes/SBMBluetoothMesh.html#/c:objc(cs)SBMBluetoothMesh(im)setProxy:enable:completion:":{"name":"-setProxy:enable:completion:","abstract":"<p>Sets proxy feature status. Method works only if proxy device is provisioned and connected.</p>","parent_name":"SBMBluetoothMesh"},"Classes/SBMBluetoothMesh.html#/c:objc(cs)SBMBluetoothMesh(im)setRelay:enable:completion:":{"name":"-setRelay:enable:completion:","abstract":"<p>Sets relay feature status. Method works only if proxy device is provisioned and connected.</p>","parent_name":"SBMBluetoothMesh"},"Classes/SBMBluetoothMesh.html#/c:objc(cs)SBMBluetoothMesh(im)setFriend:enable:completion:":{"name":"-setFriend:enable:completion:","abstract":"<p>Sets friend feature status. Method works only if proxy device is provisioned and connected.</p>","parent_name":"SBMBluetoothMesh"},"Classes/SBMBluetoothMesh.html#/c:objc(cs)SBMBluetoothMesh(im)factoryReset:completion:":{"name":"-factoryReset:completion:","abstract":"<p>Removes the Device from the network and factory reset the device. Method works only if proxy device is provisioned and connected.</p>","parent_name":"SBMBluetoothMesh"},"Classes/SBMBluetoothMesh.html#/c:objc(cs)SBMBluetoothMesh(im)deviceKeyForUUID:":{"name":"-deviceKeyForUUID:","abstract":"<p>Device crypto key for device UUID.</p>","parent_name":"SBMBluetoothMesh"},"Classes/SBMBluetoothMesh.html#/c:objc(cs)SBMBluetoothMesh(im)getOnOff:fromGroup:completion:":{"name":"-getOnOff:fromGroup:completion:","abstract":"<p>Get Generic OnOff Server model state for configured Generic OnOff Server model from the node. Method works only if proxy device is provisioned and connected. Node must be added to group before this operation.</p>","parent_name":"SBMBluetoothMesh"},"Classes/SBMBluetoothMesh.html#/c:objc(cs)SBMBluetoothMesh(im)getLevel:fromGroup:completion:":{"name":"-getLevel:fromGroup:completion:","abstract":"<p>Get Generic Level Server model state for configured Generic Level Server model from the node. Method works only if proxy device is provisioned and connected. Node must be added to group before this operation.</p>","parent_name":"SBMBluetoothMesh"},"Classes/SBMBluetoothMesh.html#/c:objc(cs)SBMBluetoothMesh(im)getDimmable:fromGroup:completion:":{"name":"-getDimmable:fromGroup:completion:","abstract":"<p>Get Light Lightness Server model state for configured Light Lightness Server model from the node. Method works only if proxy device is provisioned and connected. Node must be added to group before this operation.</p>","parent_name":"SBMBluetoothMesh"},"Classes/SBMBluetoothMesh.html#/c:objc(cs)SBMBluetoothMesh(im)setOnOff:inGroup:status:transitionMS:delayMS:requestReply:isFinal:":{"name":"-setOnOff:inGroup:status:transitionMS:delayMS:requestReply:isFinal:","abstract":"<p>Set Generic OnOff Server model state for configured Generic OnOff Server model from the node. Method works only if proxy device is provisioned and connected. Node must be added to group before this operation.</p>","parent_name":"SBMBluetoothMesh"},"Classes/SBMBluetoothMesh.html#/c:objc(cs)SBMBluetoothMesh(im)setLevel:inGroup:status:transitionMS:delayMS:requestReply:isFinal:":{"name":"-setLevel:inGroup:status:transitionMS:delayMS:requestReply:isFinal:","abstract":"<p>Set Generic Level Server model state for configured Generic Level Server model from the node. Method works only if proxy device is provisioned and connected. Node must be added to group before this operation.</p>","parent_name":"SBMBluetoothMesh"},"Classes/SBMBluetoothMesh.html#/c:objc(cs)SBMBluetoothMesh(im)setDimmable:inGroup:status:transitionMS:delayMS:requestReply:isFinal:":{"name":"-setDimmable:inGroup:status:transitionMS:delayMS:requestReply:isFinal:","abstract":"<p>Set Light Lightness Server model state for configured Light Lightness Server model from the node. Method works only if proxy device is provisioned and connected. Node must be added to group before this operation.</p>","parent_name":"SBMBluetoothMesh"},"Classes/SBMBluetoothMesh.html#/c:objc(cs)SBMBluetoothMesh(im)configuredFunctionalitiesForNode:":{"name":"-configuredFunctionalitiesForNode:","abstract":"<p>Get configured functionalities from the Node. Add node to group to configure it. Method works only if proxy device is provisioned and connected. Node must be added to group before this operation.</p>","parent_name":"SBMBluetoothMesh"},"Classes/SBMBluetoothMesh.html#/c:objc(cs)SBMBluetoothMesh(im)blacklist:":{"name":"-blacklist:","abstract":"<p>Add specific node to blacklist, effectively excluding it from key refresh procedure.</p>","parent_name":"SBMBluetoothMesh"},"Classes/SBMBluetoothMesh.html#/c:objc(cs)SBMBluetoothMesh(im)startKeyRefresh:withTimeout:completion:":{"name":"-startKeyRefresh:withTimeout:completion:","abstract":"<p>Start key refresh procedure, effectively refreshing keys for all nodes in given network. All nodes that should not take part in key refresh procedure should be blacklisted.</p>","parent_name":"SBMBluetoothMesh"},"Classes/SBMBluetoothMesh.html#/c:objc(cs)SBMBluetoothMesh(im)suspendKeyRefresh:":{"name":"-suspendKeyRefresh:","abstract":"<p>Suspend ongoing key refresh procedure. Key refresh should be suspended when mobile device leaves network to avoid spurious timeouts.</p>","parent_name":"SBMBluetoothMesh"},"Classes/SBMBluetoothMesh.html#/c:objc(cs)SBMBluetoothMesh(im)resumeKeyRefresh:completion:":{"name":"-resumeKeyRefresh:completion:","abstract":"<p>Resume previously suspended key refresh procedure. Key refresh should be resumed when mobile device reenters network.</p>","parent_name":"SBMBluetoothMesh"},"Classes/SBMBluetoothMesh.html#/c:objc(cs)SBMBluetoothMesh(im)networkHashMatches:advertisingData:":{"name":"-networkHashMatches:advertisingData:","abstract":"<p>Use this method to check if Bluetooth device is a proxy one.</p>","parent_name":"SBMBluetoothMesh"},"Classes/SBMBluetoothMesh.html#/c:objc(cs)SBMBluetoothMesh(im)deviceIdentityMatches:advertisingData:":{"name":"-deviceIdentityMatches:advertisingData:","abstract":"<p>If a device was just provisioned, it has a 60 seconds window of GATT advertising waiting to be configured. To find this device the user can use following method.</p>","parent_name":"SBMBluetoothMesh"},"Classes/SBMLogger.html#/c:objc(cs)SBMLogger(cm)sharedInstance":{"name":"+sharedInstance","abstract":"<p>SBMLogger instance.</p>","parent_name":"SBMLogger"},"Classes/SBMLogger.html#/c:objc(cs)SBMLogger(py)delegate":{"name":"delegate","abstract":"<p>SBMLogger delegate. Set this property to receive logs.</p>","parent_name":"SBMLogger"},"Classes/SBMLogger.html#/c:objc(cs)SBMLogger(im)logLevel:format:":{"name":"-logLevel:format:","abstract":"<p>Setup logs for framework.</p>","parent_name":"SBMLogger"},"Classes/SBMModelConfiguration.html#/c:objc(cs)SBMModelConfiguration(py)supportPublish":{"name":"supportPublish","abstract":"<p>Model supports publishing.</p>","parent_name":"SBMModelConfiguration"},"Classes/SBMModelConfiguration.html#/c:objc(cs)SBMModelConfiguration(py)supportSubscribe":{"name":"supportSubscribe","abstract":"<p>Model supports subscribing.</p>","parent_name":"SBMModelConfiguration"},"Classes/SBMModel.html#/c:objc(cs)SBMModel(py)configuration":{"name":"configuration","abstract":"<p>Information about supported configuration by Model</p>","parent_name":"SBMModel"},"Classes/SBMModel.html#/c:objc(cs)SBMModel(py)isSigModel":{"name":"isSigModel","abstract":"<p>Define if model is SIG Model or Vendor Model.</p>","parent_name":"SBMModel"},"Classes/SBMModel.html#/c:objc(cs)SBMModel(py)identifier":{"name":"identifier","abstract":"<p>Identifier of the model</p>","parent_name":"SBMModel"},"Classes/SBMModel.html#/c:objc(cs)SBMModel(py)name":{"name":"name","abstract":"<p>Model name</p>","parent_name":"SBMModel"},"Classes/SBMMeshNodeConfiguration.html#/c:objc(cs)SBMMeshNodeConfiguration(py)activeFunctionality":{"name":"activeFunctionality","abstract":"<p>Active node functionality.</p>","parent_name":"SBMMeshNodeConfiguration"},"Classes/SBMMeshNodeConfiguration.html#/c:objc(cs)SBMMeshNodeConfiguration(py)applicationKeys":{"name":"applicationKeys","abstract":"<p>After add Node to Group in this array will be available Application Key of this group. It is possible to add one Node to many Groups.</p>","parent_name":"SBMMeshNodeConfiguration"},"Classes/SBMMeshNodeConfiguration.html#/c:objc(cs)SBMMeshNodeConfiguration(im)configuredModelsForElementIndex:":{"name":"-configuredModelsForElementIndex:","abstract":"<p>There will be available configured Models of the Node. Configured means that Model is binded with Application Key and it means that Model is added to Group. It is possible to add Model to Group by adding Node to Group.</p>","parent_name":"SBMMeshNodeConfiguration"},"Classes/SBMMeshNode.html#/c:objc(cs)SBMMeshNode(py)name":{"name":"name","abstract":"<p>Node name.</p>","parent_name":"SBMMeshNode"},"Classes/SBMMeshNode.html#/c:objc(cs)SBMMeshNode(py)meshDeviceUUID":{"name":"meshDeviceUUID","abstract":"<p>Mesh device UUID taken from the Bluetooth device advertisement.</p>","parent_name":"SBMMeshNode"},"Classes/SBMMeshNode.html#/c:objc(cs)SBMMeshNode(py)meshAddress":{"name":"meshAddress","abstract":"<p>Address index of the Node in Bluetooth Mesh</p>","parent_name":"SBMMeshNode"},"Classes/SBMMeshNode.html#/c:objc(cs)SBMMeshNode(py)networkIndex":{"name":"networkIndex","abstract":"<p>After add Node to a specific Network, there will be available index of this Network in the Bluetooth Mesh.</p>","parent_name":"SBMMeshNode"},"Classes/SBMMeshNode.html#/c:objc(cs)SBMMeshNode(py)configuration":{"name":"configuration","abstract":"<p>Node configuration.</p>","parent_name":"SBMMeshNode"},"Classes/SBMMeshNode.html#/c:objc(cs)SBMMeshNode(im)init":{"name":"-init","abstract":"<p>Only framework can create object.</p>","parent_name":"SBMMeshNode"},"Classes/SBMMeshNetwork.html#/c:objc(cs)SBMMeshNetwork(py)name":{"name":"name","abstract":"<p>Network name.</p>","parent_name":"SBMMeshNetwork"},"Classes/SBMMeshNetwork.html#/c:objc(cs)SBMMeshNetwork(py)key":{"name":"key","abstract":"<p>Network key data</p>","parent_name":"SBMMeshNetwork"},"Classes/SBMMeshNetwork.html#/c:objc(cs)SBMMeshNetwork(im)init":{"name":"-init","abstract":"<p>Only framework can create object.</p>","parent_name":"SBMMeshNetwork"},"Classes/SBMMeshGroup.html#/c:objc(cs)SBMMeshGroup(py)name":{"name":"name","abstract":"<p>Group name.</p>","parent_name":"SBMMeshGroup"},"Classes/SBMMeshGroup.html#/c:objc(cs)SBMMeshGroup(py)networkIndex":{"name":"networkIndex","abstract":"<p>Group belongs to SBMMeshNetwork with this index.</p>","parent_name":"SBMMeshGroup"},"Classes/SBMMeshGroup.html#/c:objc(cs)SBMMeshGroup(py)applicationKeyIndex":{"name":"applicationKeyIndex","abstract":"<p>Index of Application Key.</p>","parent_name":"SBMMeshGroup"},"Classes/SBMMeshGroup.html#/c:objc(cs)SBMMeshGroup(py)applicationKey":{"name":"applicationKey","abstract":"<p>Property with Application Key data. This information is only for read and from the application perspective should be not used for anything more. Used in framework logic.</p>","parent_name":"SBMMeshGroup"},"Classes/SBMMeshGroup.html#/c:objc(cs)SBMMeshGroup(py)publicationAddress":{"name":"publicationAddress","abstract":"<p>Address to publish message to Group. This information is only for read and from the application perspective should be not used for anything more. Used in framework logic.</p>","parent_name":"SBMMeshGroup"},"Classes/SBMMeshGroup.html#/c:objc(cs)SBMMeshGroup(py)subscriptionAddress":{"name":"subscriptionAddress","abstract":"<p>Address to subscribe to Group. This information is only for read and from the application perspective should be not used for anything more. Used in framework logic.</p>","parent_name":"SBMMeshGroup"},"Classes/SBMElement.html#/c:objc(cs)SBMElement(py)location":{"name":"location","abstract":"<p>Location of Element.</p>","parent_name":"SBMElement"},"Classes/SBMElement.html#/c:objc(cs)SBMElement(py)unicastAddress":{"name":"unicastAddress","abstract":"<p>Unicast Address.</p>","parent_name":"SBMElement"},"Classes/SBMElement.html#/c:objc(cs)SBMElement(py)models":{"name":"models","abstract":"<p>Array of Models contained by Element.</p>","parent_name":"SBMElement"},"Classes/SBMDeviceFunctionality.html#/c:objc(cs)SBMDeviceFunctionality(py)functionalityId":{"name":"functionalityId","abstract":"<p>The model identifier is used to represent an element that can control and monitor the configuration of a node.</p>","parent_name":"SBMDeviceFunctionality"},"Classes/SBMDeviceFunctionality.html#/c:objc(cs)SBMDeviceFunctionality(py)functionalityElementId":{"name":"functionalityElementId","abstract":"<p>This value is a index of Element containing this functionality.</p>","parent_name":"SBMDeviceFunctionality"},"Classes/SBMDeviceCompositionData.html#/c:objc(cs)SBMDeviceCompositionData(py)cid":{"name":"cid","abstract":"<p>Company identifier.</p>","parent_name":"SBMDeviceCompositionData"},"Classes/SBMDeviceCompositionData.html#/c:objc(cs)SBMDeviceCompositionData(py)pid":{"name":"pid","abstract":"<p>Vendor-assigned product identifier.</p>","parent_name":"SBMDeviceCompositionData"},"Classes/SBMDeviceCompositionData.html#/c:objc(cs)SBMDeviceCompositionData(py)vid":{"name":"vid","abstract":"<p>Vendor-assigned product version identifier.</p>","parent_name":"SBMDeviceCompositionData"},"Classes/SBMDeviceCompositionData.html#/c:objc(cs)SBMDeviceCompositionData(py)crpl":{"name":"crpl","abstract":"<p>Minimum number of replay protection list entries in a device.</p>","parent_name":"SBMDeviceCompositionData"},"Classes/SBMDeviceCompositionData.html#/c:objc(cs)SBMDeviceCompositionData(py)features":{"name":"features","abstract":"<p>Device features:</p>","parent_name":"SBMDeviceCompositionData"},"Classes/SBMDeviceCompositionData.html#/c:objc(cs)SBMDeviceCompositionData(py)elements":{"name":"elements","abstract":"<p>Array of elements available from the node.</p>","parent_name":"SBMDeviceCompositionData"},"Classes/SBMDeviceCompositionData.html#/c:objc(cs)SBMDeviceCompositionData(im)relaySupport":{"name":"-relaySupport","abstract":"<p>Is Relay feature supported by node.</p>","parent_name":"SBMDeviceCompositionData"},"Classes/SBMDeviceCompositionData.html#/c:objc(cs)SBMDeviceCompositionData(im)proxySupport":{"name":"-proxySupport","abstract":"<p>Is Proxy feature supported by node.</p>","parent_name":"SBMDeviceCompositionData"},"Classes/SBMDeviceCompositionData.html#/c:objc(cs)SBMDeviceCompositionData(im)friendSupport":{"name":"-friendSupport","abstract":"<p>Is Friend feature supported by node.</p>","parent_name":"SBMDeviceCompositionData"},"Classes/SBMDeviceCompositionData.html#/c:objc(cs)SBMDeviceCompositionData(im)lowPowerSupport":{"name":"-lowPowerSupport","abstract":"<p>Is Low Power feature supported by node.</p>","parent_name":"SBMDeviceCompositionData"},"Classes/SBMApplicationKey.html#/c:objc(cs)SBMApplicationKey(py)key":{"name":"key","abstract":"<p>Key is an application key index for application key from the mesh.</p>","parent_name":"SBMApplicationKey"},"Classes/SBMBluetoothAdapter.html#/c:objc(cs)SBMBluetoothAdapter(py)delegate":{"name":"delegate","abstract":"<p>SBMBluetoothAdapterDelegate it is a delegate used by Mesh library to send messages to Bluetooth devices. It is needed to set this property.</p>","parent_name":"SBMBluetoothAdapter"},"Classes/SBMBluetoothAdapter.html#/c:objc(cs)SBMBluetoothAdapter(im)connectGatt:":{"name":"-connectGatt:","abstract":"<p>Inform Bluetooth Mesh about successfully prepared Bluetooth connection with the specified Mesh service containing GATT service discovery, locate the data out characteristic for the requested service, and turn notifications on for it.</p>","parent_name":"SBMBluetoothAdapter"},"Classes/SBMBluetoothAdapter.html#/c:objc(cs)SBMBluetoothAdapter(im)disconnectGatt:":{"name":"-disconnectGatt:","abstract":"<p>Inform Bluetooth Mesh about close Bluetooth connection.</p>","parent_name":"SBMBluetoothAdapter"},"Classes/SBMBluetoothAdapter.html#/c:objc(cs)SBMBluetoothAdapter(im)writeDataToGattHandle:byte:":{"name":"-writeDataToGattHandle:byte:","abstract":"<p>Call this method with received data from subscribed Bluetooth characteristic. To receive data it is needed to activate notification for required characteristic.</p>","parent_name":"SBMBluetoothAdapter"},"Classes/SBMBluetoothAdapter.html#/c:objc(cs)SBMBluetoothAdapter(im)updateMTU:":{"name":"-updateMTU:","abstract":"<p>Call this method after MTU change. The maximum amount of data, in bytes, that can be sent to a characteristic in a single write type. MTU can be taken from maximumWriteValueLength from the connected CBPeripheral for CBCharacteristicWriteWithoutResponse.</p>","parent_name":"SBMBluetoothAdapter"},"Classes/SBMBluetoothAdapter.html":{"name":"SBMBluetoothAdapter","abstract":"<p>SBMBluetoothAdapter is a GATT event handler. BluetoothAdapter object is responsible for exchange messages between Bluetooth peripherals and Mesh library. Is is the gate of communication from the Bluetooth Mesh iOS Framework to the user application, all the operations that depends on the Bluetooth Mesh network will return it’s value to delegate that must be implemented in the application.</p>"},"Classes/SBMApplicationKey.html":{"name":"SBMApplicationKey","abstract":"<p>It is a container for application key index. Application key is used to bind model from the device with specific group. Each SBMMeshGroup has own application key index.</p>"},"Classes/SBMDeviceCompositionData.html":{"name":"SBMDeviceCompositionData","abstract":"<p>SBMDeviceCompositionData contains information about a node, the elements it includes, and the supported models.</p>"},"Classes/SBMDeviceFunctionality.html":{"name":"SBMDeviceFunctionality","abstract":"<p>Device functionality. This is mainly used for the setting the device&rsquo;s control option in the UI.</p>"},"Classes/SBMElement.html":{"name":"SBMElement","abstract":"<p>Each node contains one or more Elements. Element is a container for a Models contained by Node.</p>"},"Classes/SBMMeshGroup.html":{"name":"SBMMeshGroup","abstract":"<p>A SBMMeshGroup is the object that contains an Application Key and a publish and subscribe addresses that will be"},"Classes/SBMMeshNetwork.html":{"name":"SBMMeshNetwork","abstract":"<p>A SBMMeshNetwork object contains informations about the Bluetooth Mesh Network.</p>"},"Classes/SBMMeshNode.html":{"name":"SBMMeshNode","abstract":"<p>A SBMMeshNode is the object that contains all the information about a Bluetooth Mesh device in a Network. It is created right after provision a device. After add node to group(Configure available models from DCD), it will be possible to get all configured Elements and Models from the configuration object. DCD can be also downloaded manualu without adding to the specific group.</p>"},"Classes/SBMMeshNodeConfiguration.html":{"name":"SBMMeshNodeConfiguration","abstract":"<p>Configuration of the Node.</p>"},"Classes/SBMModel.html":{"name":"SBMModel","abstract":"<p>Model is an object created after receive the device composition data (DCD) for a Node. There is no much interaction with this object in this version.</p>"},"Classes/SBMModelConfiguration.html":{"name":"SBMModelConfiguration","abstract":"<p>Model configuration.</p>"},"Classes/SBMLogger.html":{"name":"SBMLogger","abstract":"<p>Bluetooth Mesh logger. Setup this object to receive logs from the framework.</p>"},"Classes/SBMBluetoothMesh.html":{"name":"SBMBluetoothMesh","abstract":"<p>It is the main object of the Bluetooth Mesh iOS API. Exchange of messages between user application and Bluetooth Mesh Framework happens in here (e.g. Provisioning, Configuration, Controlling, Deletion, etc).</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Constants.html":{"name":"Constants","abstract":"<p>The following constants are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Type Definitions.html":{"name":"Type Definitions","abstract":"<p>The following type definitions are available globally.</p>"}}