#ISD afv6
# ISD version: 3.4.2706

# Application configuration
appId: btmesh
architecture: efr32~family[B]~performance[P]~radio[232]~flash[256K]~temp[G]~package[M]~pins[48]+BRD4100A+iar
deviceName: soc-btmesh-light
generationDirectory: PATH(ISC_RELATIVE):.

# UI customization
hiddenLayoutElements: plugins,callbacks,other

# Plugin configuration
appPlugin: glib=true
appPlugin: kit=true
appPlugin: kit_lcd=true
appPlugin: emlib=true
appPlugin: device=true
appPlugin: emdrv=true
appPlugin: cmsis=true
appPlugin: bt_mesh_stack=true
appPlugin: rail=true
appPlugin: kit_flashpwr=true
appPlugin: kit_board=true
appPlugin: bgapi=false
appPlugin: kit_ioexpander=false
appPlugin: bg_stack=false
appPlugin: serial_vcom=true


# Setup configurations
{setupId:hwConfig
featureLevel=1
active=true
}


{setupId:bleGattConfigurator
<?xml version="1.0" encoding="UTF-8"?><gatt generic_attribute_service="true" header="gatt_db.h" name="Custom BLE GATT" out="gatt_db.c" prefix="gattdb_">
  <capabilities_declare>
    <capability enable="false">mesh_provisioning_service</capability>
    <capability enable="false">mesh_proxy_service</capability>
  </capabilities_declare>
  <service advertise="false" name="Generic Access" requirement="mandatory" sourceId="org.bluetooth.service.generic_access" type="primary" uuid="1800">
    <informativeText>Abstract:  The generic_access service contains generic information about the device. All available Characteristics are readonly.  </informativeText>
    <characteristic id="device_name" name="Device Name" sourceId="org.bluetooth.characteristic.gap.device_name" uuid="2A00">
      <informativeText/>
      <value length="20" type="utf-8" variable_length="true">BlueGecko Mesh Demo </value>
      <properties const="false" const_requirement="optional" read="true" read_requirement="mandatory"/>
    </characteristic>
    <characteristic name="Appearance" sourceId="org.bluetooth.characteristic.gap.appearance" uuid="2A01">
      <informativeText>Abstract:  The external appearance of this device. The values are composed of a category (10-bits) and sub-categories (6-bits).  </informativeText>
      <value length="2" type="hex" variable_length="false">4003</value>
      <properties const="true" const_requirement="optional" read="true" read_requirement="mandatory"/>
    </characteristic>
  </service>
  <service advertise="false" id="manufacturer" name="Device Information" requirement="mandatory" sourceId="org.bluetooth.service.device_information" type="primary" uuid="180A">
    <informativeText>Abstract:  The Device Information Service exposes manufacturer and/or vendor information about a device.  Summary:  This service exposes manufacturer information about a device. The Device Information Service is instantiated as a Primary Service. Only one instance of the Device Information Service is exposed on a device.  </informativeText>
    <characteristic name="Manufacturer Name String" sourceId="org.bluetooth.characteristic.manufacturer_name_string" uuid="2A29">
      <informativeText>Abstract:  The value of this characteristic is a UTF-8 string representing the name of the manufacturer of the device.  </informativeText>
      <value length="12" type="utf-8" variable_length="false">Silicon Labs</value>
      <properties const="true" const_requirement="optional" read="true" read_requirement="mandatory"/>
    </characteristic>
  </service>
  <service advertise="true" name="Mesh Provisioning Service" requirement="mandatory" sourceId="com.silabs.service.mesh_provisioning" type="primary" uuid="1827">
    <informativeText>Abstract:  The Mesh Provisioning Service allows a Provisioning Client to provision a Provisioning Server to allow it to participate in the mesh network.  </informativeText>
    <capabilities>
      <capability>mesh_provisioning_service</capability>
    </capabilities>
    <characteristic name="Mesh Provisioning Data In" sourceId="com.silabs.characteristic.mesh_provisioning_data_in" uuid="2adb">
      <informativeText>Abstract:  The Mesh Provisioning Data In characteristic can be written to send a Proxy PDU message containing Provisioning PDU to the Provisioning Server.  </informativeText>
      <value length="0" type="user" variable_length="false"/>
      <properties write_no_response="true" write_no_response_requirement="mandatory"/>
    </characteristic>
    <characteristic name="Mesh Provisioning Data Out" sourceId="com.silabs.characteristic.mesh_provisioning_data_out" uuid="2adc">
      <informativeText>Abstract:  The Mesh Provisioning Data Out characteristic can be notified to send a Proxy PDU message containing Provisioning PDU from a Provisioning Server to a Provisioning Client.  </informativeText>
      <value length="0" type="user" variable_length="false"/>
      <properties notify="true" notify_requirement="mandatory"/>
    </characteristic>
  </service>
  <service advertise="true" name="Mesh Proxy Service" requirement="mandatory" sourceId="com.silabs.service.mesh_proxy" type="primary" uuid="1828">
    <informativeText>Abstract:  The Mesh Proxy Service is used to enable a server to send and receive Proxy PDUs with a client.  </informativeText>
    <capabilities>
      <capability>mesh_proxy_service</capability>
    </capabilities>
    <characteristic name="Mesh Proxy Data In" sourceId="com.silabs.characteristic.mesh_proxy_data_in" uuid="2add">
      <informativeText>Abstract:  The Mesh Proxy Data In characteristic is used by the client to send Proxy PDUs to the server  </informativeText>
      <value length="0" type="user" variable_length="false"/>
      <properties write_no_response="true" write_no_response_requirement="mandatory"/>
    </characteristic>
    <characteristic name="Mesh Proxy Data Out" sourceId="com.silabs.characteristic.mesh_proxy_data_out" uuid="2ade">
      <informativeText>Abstract:  The Mesh Proxy Data Out characteristic is used by the server to send Proxy PDUs to the client.  </informativeText>
      <value length="0" type="user" variable_length="false"/>
      <properties notify="true" notify_requirement="mandatory"/>
    </characteristic>
  </service>
  <service advertise="false" name="Silicon Labs OTA" requirement="mandatory" sourceId="com.silabs.service.ota" type="primary" uuid="1D14D6EE-FD63-4FA1-BFA4-8F47B42119F0">
    <informativeText>Abstract: The Silicon Labs OTA Service enables over-the-air firmware update of the device. </informativeText>
    <characteristic id="ota_control" name="Silicon Labs OTA Control" sourceId="com.silabs.characteristic.ota_control" uuid="F7BF3564-FB6D-4E53-88A4-5E37E0326063">
      <informativeText>Abstract: Silicon Labs OTA Control. </informativeText>
      <value length="1" type="user" variable_length="false"/>
      <properties write="true" write_requirement="optional"/>
    </characteristic>
  </service>
</gatt>

}

{setupId:btMeshConfigurator
\{
  "COMMENT": "",
  "Composition Data": \{
    "CID": "0x02ff",
    "PID": "0xf0b0",
    "VID": "0x1234",
    "CRPL": "0x0020",
    "Features": "0x0007",
    "Elements": [
        \{
            "Name": "Primary Element",
            "Loc": "0x0000",
            "NumS": "0x0b",
            "NumV": "0x00",
            "SIG Models" : [
                "0x0000", "Primary Conf Server",
                "0x0002", "Primary Health Server",
                "0x1000", "Generic On/Off Server",
                "0x1300", "Light Lightness Server",
                "0x1301", "Light Lightness Setup Server",
                "0x1002", "Generic Level Server",
                "0x1006", "Generic Power OnOff Server",
                "0x1007", "Generic Power OnOff Setup Server",
                "0x1004", "Generic Default Transition Time Server",
                "0x1303", "Light CTL Server",
                "0x1304", "Light CTL Setup Server"
            ]
        \},
        \{
            "Name": "Secondary Element",
            "Loc": "0x0000",
            "NumS": "0x02",
            "NumV": "0x00",
            "SIG Models" : [
                "0x1002", "Generic Level Server",
                "0x1306", "Light CTL Temperature Server"
            ]
        \}
    ]
  \},
    "Memory configuration": \{
    "MAX_ELEMENTS": "2",
    "MAX_MODELS": "13",
    "MAX_APP_BINDS": "4",
    "MAX_SUBSCRIPTIONS": "4",
    "MAX_NETKEYS": "4",
    "MAX_APPKEYS": "4",
    "MAX_DEVKEYS": "1",
    "NET_CACHE_SIZE": "16",
    "RPL_SIZE": "32",
    "MAX_SEND_SEGS": "4",
    "MAX_RECV_SEGS": "4",
    "MAX_VAS": "4",
    "MAX_PROV_SESSIONS": "2",
    "MAX_PROV_BEARERS": "2",
    "MAX_GATT_CONNECTIONS": "3",
    "GATT_TXQ_SIZE": "4",
    "MAX_PROVISIONED_DEVICES": "0",
    "MAX_PROVISIONED_DEVICE_NETKEYS": "0",
    "MAX_FOUNDATION_CLIENT_CMDS": "0",
    "MAX_FRIENDSHIPS": "1",
    "FRIEND_MAX_SUBS_LIST": "5",
    "FRIEND_MAX_TOTAL_CACHE": "5",
    "FRIEND_MAX_SINGLE_CACHE": "5"
  \}
\}
}
