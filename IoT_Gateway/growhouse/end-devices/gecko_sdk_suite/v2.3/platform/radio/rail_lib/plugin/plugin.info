plugin(rail-library) {
  name=RAIL Library
  description=This plugin provides core RAIL library.
  category=RAIL
  quality=production
  root=$RAIL_LIB

  architecture=efr32,em341,em342,em346,em351,em355,em3555,em357,em3581,em3582,em3585,em3586,em3587,em3588,em3591,em3592,em3595,em3596,em3597,em3598,simulation

  providedApis=rail-library
  api.rail-library.header=$RAIL_LIB/common/rail.h

  # Include a bunch of additional include paths that are needed for RAIL
  setup(additionalFiles) {
    (efr32)=$RAIL_LIB/chip/efr32
    (efr32)=$RAIL_LIB/chip/efr32/rf/common/cortex
    (efr32)=$RAIL_LIB/common
    (efr32)=$RAIL_LIB/protocol/ble
    (efr32)=$RAIL_LIB/protocol/ieee802154
  }

  # Include the actual RAIL library for the appropriate generation.
  precompiled(efr32) {
    file= $RAIL_LIB/autogen/librail_release/librail_efr32xg$--partHardware.series--$$--partHardware.device_configuration--$_$--toolchainName--$_release.a
  }

  options=railphydef
  railphydef.name=RAIL PHY define
  railphydef.type=NUMBER
  railphydef.default=1
  railphydef.hidden=TRUE
  railphydef.enabledIf=conf.architectureMatches("efr32")
  railphydef.macro=-DPHY_RAIL
}

plugin(rail-library-mp) {
  name=RAIL Library Multiprotocol
  description=This plugin provides core RAIL library with multiprotocol support.
  category=RAIL
  quality=production
  root=$RAIL_LIB

  architecture=efr32,em341,em342,em346,em351,em355,em3555,em357,em3581,em3582,em3585,em3586,em3587,em3588,em3591,em3592,em3595,em3596,em3597,em3598,simulation

  providedApis=rail-library,radio-multiprotocol-support
  api.rail-library.header=$RAIL_LIB/common/rail.h

  # Include a bunch of additional include paths that are needed for RAIL
  setup(additionalFiles) {
    (efr32)=$RAIL_LIB/chip/efr32
    (efr32)=$RAIL_LIB/chip/efr32/rf/common/cortex
    (efr32)=$RAIL_LIB/common
    (efr32)=$RAIL_LIB/protocol/ble
    (efr32)=$RAIL_LIB/protocol/ieee802154
  }

  # Include the actual RAIL library for the appropriate generation.
  precompiled(efr32) {
    file= $RAIL_LIB/autogen/librail_release/librail_multiprotocol_efr32xg$--partHardware.series--$$--partHardware.device_configuration--$_$--toolchainName--$_release.a
  }

  options=railphydef
  railphydef.name=RAIL PHY define
  railphydef.type=NUMBER
  railphydef.default=1
  railphydef.hidden=TRUE
  railphydef.enabledIf=conf.architectureMatches("efr32")
  railphydef.macro=-DPHY_RAIL
}

plugin(coexistence) {
  name=Radio Coexistence
  description=This plugin provides an interface to configure coexistence GPIO via hardware configurator.
  category=RAIL
  quality=production
  root=$RAIL_LIB

  setup(hwConfig) {
    dependentHwConfModules=COEX
  }

  providedApis=coexistence
  api.coexistence.header=$RAIL_LIB/plugin/coexistence/protocol/ieee802154/coexistence-802154.h

  architecture=efr32,em341,em342,em346,em351,em355,em3555,em357,em3581,em3582,em3585,em3586,em3587,em3588,em3591,em3592,em3595,em3596,em3597,em3598,simulation

  $RAIL_LIB/plugin/coexistence/protocol/ieee802154/coexistence-802154.c                               (efr32,em341,em342,em346,em351,em355,em3555,em357,em3581,em3582, em3585,em3586,em3587,em3588,em3591,em3592,em3595,em3596,em3597,em3598)  
  $RAIL_LIB/plugin/coexistence/hal/em3xx/coexistence-hal.c         (em341,em342,em346,em351,em355,em3555,em357,em3581,em3582, em3585,em3586,em3587,em3588,em3591,em3592,em3595,em3596,em3597,em3598)
  $RAIL_LIB/plugin/coexistence/common/coexistence.c         (efr32,em341,em342,em346,em351,em355,em3555,em357,em3581,em3582, em3585,em3586,em3587,em3588,em3591,em3592,em3595,em3596,em3597,em3598)
  $RAIL_LIB/plugin/coexistence/hal/efr32/coexistence-hal.c (efr32)

  setup(additionalFiles) {
    # Common include paths
    (simulation,efr32,em341,em342,em346,em351,em355,em3555,em357,em3581,em3582,em3585,em3586,em3587,em3588,em3591,em3592,em3595,em3596,em3597,em3598)=PATH(ABSOLUTE):$RAIL_LIB/plugin/coexistence/common/
    # IEEE802154 include paths
    (simulation,efr32,em341,em342,em346,em351,em355,em3555,em357,em3581,em3582,em3585,em3586,em3587,em3588,em3591,em3592,em3595,em3596,em3597,em3598)=PATH(ABSOLUTE):$RAIL_LIB/plugin/coexistence/protocol/ieee802154    
    # EFR32 specific include paths
    (efr32)=PATH(ABSOLUTE):$RAIL_LIB/plugin/coexistence/hal/efr32
    # EM3XX specific include paths
    (em341,em342,em346,em351,em355,em3555,em357,em3581,em3582,em3585,em3586,em3587,em3588,em3591,em3592,em3595,em3596,em3597,em3598)=PATH(ABSOLUTE):$RAIL_LIB/plugin/coexistence/hal/em3xx
  }
}
