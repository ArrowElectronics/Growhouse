Based on qtwebengine-opensource-src-5.8.0-wtf-gcc7.patch from
http://git.net/ml/scm-fedora-commits/2017-03/msg15697.html

* Fixes:
In file included from ../../git/src/third_party/WebKit/Source/platform/heap/ThreadingTraits.h:14:0,
                 from ../../git/src/third_party/WebKit/Source/platform/heap/ThreadState.h:37,
                 from ../../git/src/third_party/WebKit/Source/platform/heap/GarbageCollected.h:8,
                 from ../../git/src/third_party/WebKit/Source/platform/heap/Visitor.h:35,
                 from ../../git/src/third_party/WebKit/Source/platform/heap/GCInfo.h:8,
                 from ../../git/src/third_party/WebKit/Source/platform/heap/Heap.h:35,
                 from ../../git/src/third_party/WebKit/Source/platform/heap/Handle.h:34,
                 from ../../git/src/third_party/WebKit/public/platform/WebPrivatePtr.h:38,
                 from ../../git/src/third_party/WebKit/public/platform/WebString.h:35,
                 from ../../git/src/third_party/WebKit/Source/platform/exported/FilePathConversion.cpp:8:
../../git/src/third_party/WebKit/Source/wtf/LinkedHashSet.h: In member function 'void WTF::LinkedHashSet<Value, HashFunctions, HashTraits, Allocator>::swap(WTF::LinkedHashSet<Value, HashFunctions, HashTraits, Allocator>&)':
../../git/src/third_party/WebKit/Source/wtf/LinkedHashSet.h:549:5: error: there are no arguments to 'swapAnchor' that depend on a template parameter, so a declaration of 'swapAnchor' must be available [-fpermissive]
     swapAnchor(m_anchor, other.m_anchor);
     ^~~~~~~~~~
../../git/src/third_party/WebKit/Source/wtf/LinkedHashSet.h:549:5: note: (if you use '-fpermissive', G++ will accept your code, but allowing the use of an undeclared name is deprecated)

--- chromium-54.0.2810.2.orig/third_party/WebKit/Source/wtf/LinkedHashSet.h	2016-07-28 12:16:12.000000000 -1000
+++ chromium-54.0.2810.2/third_party/WebKit/Source/wtf/LinkedHashSet.h	2017-06-16 02:19:37.928797121 -1000
@@ -542,6 +542,8 @@
     return *this;
 }
 
+inline void swapAnchor(LinkedHashSetNodeBase& a, LinkedHashSetNodeBase& b);
+
 template<typename T, typename U, typename V, typename W>
 inline void LinkedHashSet<T, U, V, W>::swap(LinkedHashSet& other)
 {
