From 21c018a516a1d3299c26043d518fa627e9268dd6 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Andreas=20M=C3=BCller?= <schnitzeltony@googlemail.com>
Date: Wed, 19 Oct 2016 15:53:44 +0200
Subject: [PATCH 2/2] do not set included paths as system - causes trouble with
 gcc-6
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

fixes errors as:
| /home/superandy/tmp/oe-core-glibc/sysroots/raspberrypi2/usr/include/c++/6.2.0/cstdlib:75:25: fatal error: stdlib.h: No such file or directory
| #include_next <stdlib.h>
                         ^
further information at [1]

[1] https://gcc.gnu.org/bugzilla/show_bug.cgi?id=70129

Signed-off-by: Andreas MÃ¼ller <schnitzeltony@googlemail.com>
---
 CMakeLists.txt | 28 ++++++++++++++--------------
 1 file changed, 14 insertions(+), 14 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 045bfbd..63e3072 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -119,7 +119,7 @@ ELSE(ENABLE_BOOST_STATIC_LIBS)
   SET(Boost_USE_STATIC_LIBS FALSE)
 ENDIF(ENABLE_BOOST_STATIC_LIBS)
 FIND_PACKAGE(Boost REQUIRED COMPONENTS filesystem system date_time)
-INCLUDE_DIRECTORIES(SYSTEM ${Boost_INCLUDE_DIR})
+INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIR})
 LINK_DIRECTORIES(${Boost_LIBRARY_DIRS})
 
 IF(WIN32)
@@ -143,14 +143,14 @@ OPTION(GLBINDING_DEBUG_OUTPUT "Enable glbinding debug output for each called Ope
 IF(ENABLE_OPENGL)
   FIND_PACKAGE(OpenGL)
   IF(OPENGL_FOUND)
-    INCLUDE_DIRECTORIES(SYSTEM ${OPENGL_INCLUDE_DIR})
+    INCLUDE_DIRECTORIES(${OPENGL_INCLUDE_DIR})
     SET(HAVE_OPENGL TRUE)
   ENDIF(OPENGL_FOUND)
 
   IF(GLBINDING_ENABLED)
     FIND_PACKAGE(GLBINDING REQUIRED)
     IF(GLBINDING_FOUND)
-      INCLUDE_DIRECTORIES(SYSTEM ${GLBINDING_INCLUDES})
+      INCLUDE_DIRECTORIES(${GLBINDING_INCLUDES})
       ADD_DEFINITIONS(-DUSE_GLBINDING)
       IF (GLBINDING_DEBUG_OUTPUT)
         ADD_DEFINITIONS(-DUSE_GLBINDING_DEBUG_OUTPUT)
@@ -159,16 +159,16 @@ IF(ENABLE_OPENGL)
   ELSE()
     FIND_PACKAGE(GLEW REQUIRED)
     IF(GLEW_FOUND)
-      INCLUDE_DIRECTORIES(SYSTEM ${GLEW_INCLUDE_DIR})
+      INCLUDE_DIRECTORIES(${GLEW_INCLUDE_DIR})
     ENDIF(GLEW_FOUND)
   ENDIF()
 ENDIF(ENABLE_OPENGL)
 
 FIND_PACKAGE(OpenAL REQUIRED)
-INCLUDE_DIRECTORIES(SYSTEM ${OPENAL_INCLUDE_DIR})
+INCLUDE_DIRECTORIES(${OPENAL_INCLUDE_DIR})
 
 FIND_PACKAGE(OggVorbis REQUIRED)
-INCLUDE_DIRECTORIES(SYSTEM ${VORBIS_INCLUDE_DIR})
+INCLUDE_DIRECTORIES(${VORBIS_INCLUDE_DIR})
 
 INCLUDE(CheckSymbolExists)
 
@@ -218,19 +218,19 @@ IF(NOT USE_SYSTEM_PHYSFS)
 	SET(PHYSFS_INCLUDE_DIR "${PHYSFS_PREFIX}/include/")
 ENDIF()
 
-INCLUDE_DIRECTORIES(BEFORE SYSTEM ${PHYSFS_INCLUDE_DIR})
+INCLUDE_DIRECTORIES(BEFORE ${PHYSFS_INCLUDE_DIR})
 
 
 ## The curl headers are in the standard include path in dependencies
 ## so it's not required to add them here
 FIND_PACKAGE(CURL REQUIRED)
 IF(CURL_FOUND)
-	INCLUDE_DIRECTORIES(SYSTEM ${CURL_INCLUDE_DIR})
+	INCLUDE_DIRECTORIES(${CURL_INCLUDE_DIR})
 	SET(HAVE_LIBCURL TRUE)
 ENDIF(CURL_FOUND)
 
 #FIND_PACKAGE(ICONV REQUIRED)
-#INCLUDE_DIRECTORIES(SYSTEM ${ICONV_INCLUDE_DIR})
+#INCLUDE_DIRECTORIES(${ICONV_INCLUDE_DIR})
 #LINK_LIBRARIES(${ICONV_LIBRARY})
 
 IF(EXISTS "${CMAKE_SOURCE_DIR}/.git")
@@ -355,7 +355,7 @@ ELSE()
 	SET_TARGET_PROPERTIES(sqstdlib_lib PROPERTIES IMPORTED_LOCATION "${SQUIRREL_PREFIX}/lib/${CMAKE_STATIC_LIBRARY_PREFIX}sqstdlib_static${CMAKE_STATIC_LIBRARY_SUFFIX}")
 ENDIF()
 
-INCLUDE_DIRECTORIES(SYSTEM ${SQUIRREL_PREFIX}/include)
+INCLUDE_DIRECTORIES(${SQUIRREL_PREFIX}/include)
 
 ## Also build external/tinygettext
 
@@ -381,15 +381,15 @@ ExternalProject_Add(tinygettext
 ADD_LIBRARY(tinygettext_lib STATIC IMPORTED)
 SET_TARGET_PROPERTIES(tinygettext_lib PROPERTIES IMPORTED_LOCATION "${TINYGETTEXT_PREFIX}/lib${LIB_SUFFIX}/${CMAKE_STATIC_LIBRARY_PREFIX}tinygettext${CMAKE_STATIC_LIBRARY_SUFFIX}")
 
-INCLUDE_DIRECTORIES(SYSTEM ${TINYGETTEXT_PREFIX}/include)
+INCLUDE_DIRECTORIES(${TINYGETTEXT_PREFIX}/include)
 
 ## Some additional include paths
 
 include_directories(${CMAKE_BINARY_DIR}/)
 include_directories(${CMAKE_CURRENT_SOURCE_DIR}/src/)
-include_directories(SYSTEM ${CMAKE_CURRENT_SOURCE_DIR}/external/findlocale/)
-include_directories(SYSTEM ${CMAKE_CURRENT_SOURCE_DIR}/external/obstack/)
-include_directories(SYSTEM ${CMAKE_CURRENT_SOURCE_DIR}/external/sexp-cpp/include/)
+include_directories(${CMAKE_CURRENT_SOURCE_DIR}/external/findlocale/)
+include_directories(${CMAKE_CURRENT_SOURCE_DIR}/external/obstack/)
+include_directories(${CMAKE_CURRENT_SOURCE_DIR}/external/sexp-cpp/include/)
 
 IF(WIN32)
   ADD_DEFINITIONS(-D_USE_MATH_DEFINES -DNOMINMAX)
-- 
2.5.5

