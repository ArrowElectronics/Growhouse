We don't place target libraries within ${exec_prefix}, we'd always place these
within the target sysroot within the standard library directories. Worse, the
append_to_lib_path code prefixes these paths with the sysroot which makes even
less sense.

These directories therefore don't make sense in our case and mean we have to 
relocate all the linker scripts if they're present. Dropping them 
gives a reasonable performance improvement/simplification.

Upstream-Status: Inappropriate

RP 2017/01/30

Index: git/ld/genscripts.sh
===================================================================
--- git.orig/ld/genscripts.sh
+++ git/ld/genscripts.sh
@@ -189,29 +189,6 @@ append_to_lib_path()
   fi
 }
 
-# Always search $(tooldir)/lib, aka /usr/local/TARGET/lib when native
-# except when LIBPATH=":".
-if [ "${LIB_PATH}" != ":" ] ; then
-  libs=
-  if [ "x${TOOL_LIB}" = "x" ] ; then
-    if [ "x${NATIVE}" = "xyes" ] ; then
-      libs="${exec_prefix}/${target_alias}/lib"
-    fi
-  else
-    # For multilib'ed targets, ensure both ${target_alias}/lib${LIBPATH_SUFFIX}
-    # and ${TOOL_LIB}/lib${LIBPATH_SUFFIX} are in the default search path,
-    # because 64bit libraries may be in both places, depending on
-    # cross-development setup method (e.g.: /usr/s390x-linux/lib64
-    # vs. /usr/s390-linux/lib64)
-    case "${NATIVE}:${LIBPATH_SUFFIX}:${TOOL_LIB}" in
-      :* | *::* | *:*:*${LIBPATH_SUFFIX}) ;;
-      *) libs="${exec_prefix}/${target_alias}/lib${LIBPATH_SUFFIX}" ;;
-    esac
-    libs="${exec_prefix}/${TOOL_LIB}/lib ${libs}"
-  fi
-  append_to_lib_path ${libs}
-fi
-
 if [ "x${LIB_PATH}" = "x" ] && [ "x${USE_LIBPATH}" = xyes ] ; then
   libs=${NATIVE_LIB_DIRS}
   if [ "x${NATIVE}" = "xyes" ] ; then
