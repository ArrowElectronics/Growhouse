#Copyright (c) 2018, The Linux Foundation. All rights reserved.
#
#Redistribution and use in source and binary forms, with or without
#modification, are permitted provided that the following conditions are
#met:
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above
#      copyright notice, this list of conditions and the following
#      disclaimer in the documentation and/or other materials provided
#      with the distribution.
#    * Neither the name of The Linux Foundation nor the names of its
#      contributors may be used to endorse or promote products derived
#      from this software without specific prior written permission.
#
#THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
#WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
#ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
#BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
#BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
#OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
#IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
metadata:
    format: Lava-Test Test Definition 1.0
    name: thermal-test
    description: "The test will measure the CPU frequency and temperature, as well its dhrystone score.
                  It uses dhrystone to benchmark the CPU and to measure its score.
                  The data is saved to a log which can be exported to a spreadsheet.
                  The data generated by this test can be used to be compared with another boards for benchmark purposes.
		  please read setup instructions below

                  The run-thermal-test.sh accepts the following parameters:
                        -l: sets the value for the lower temperature limit.
                        -u: sets the value for the upper temperature limit.
                        -n: sets the value for the number of dhrystones to be executed.
                        -h: shows the help and exits the script."

# setup instructions:
#how to compile dhrystone -
#   1. download src files from here: https://fossies.org/linux/privat/old/dhrystone-2.1.tar.gz/
#   2. copy to device files: dhry.h, dhry_1.c, dhry_2.c
#   3. compile: aarch64-linaro-linux-gcc -DTIME -DHZ=60 -DNOENUMS -DNOSTRUCTASSIGN dhry_1.c dhry_2.c -o dhry
#   4. copy dhry binary to automated/linux/thermal/bin/

#How to use the lib-thlog2excel.py:
# Prerequisites:
#   python 2.7
#   numpy (pip install numpy)
#   xlsxwriter (pip install xlsxwriter)
# Run:
#   python2 lib-thlog2excel.py <ThermalLog-File> <DhrystoneLog-File>
#   ThermalLog-File: Thermal log file;
#   DhrystoneLog-File: Dhrystone log file;
# The lib-thlog2excel.py works fine on HostPC;
# We still need to install the numpy and xlsxwriter on DragonBoard 410c (Open Embedded) to run the lib-thlog2excel.py with the tests scripts

    maintainer:

    os:
        - openembedded
    scope:
        - functional
    devices:
        - apq8016_sbc

params:
  # dhry_arg                - passed as an argument to dhry binary. If not given defaults to 500000000000000.
  #                           This influences the time it takes to finish a single thermal_test_iteration. using default, duration is ~22 minuets

  # thermal_test_iterations - iterations of a Dhrystone run. in each iteration when run 4 paraler dhrystons to overload the 4 CPUs
  #                           if not given defaults to 5.

  # lower_temperature_KPI   - This is the lower temperature KPI limit. If not given defaults to 70000.
  # upper_temperature_KPI   - This is the upper temperature KPI limit. If not given defaults to 80000.
  # If both KPI arguments not given the test will report PASS and log the results to be used as a benchmark in future runs.

  # Usage e.g:./run-thermal-test.sh -l "${lower_temperature_KPI}" -u "${upper_temperature_KPI}" -n "${dhry_arg}" -i "${thermal_test_iterations}"
  # To run "run-thermal-test.sh" we have a "thermal-conf.sh" as an auxiliar file. This ensure a default value for some variables.

#  dhry_arg: "500000000000000"
#  lower_temperature_KPI: "70000"
#  upper_temperature_KPI: "80000"
#  thermal_test_iterations: "5"

run:
    steps:
        - cd ./automated/linux/thermal/
        - ./run-thermal-test.sh
        - ../../utils/send-to-lava.sh ./output/result.txt
