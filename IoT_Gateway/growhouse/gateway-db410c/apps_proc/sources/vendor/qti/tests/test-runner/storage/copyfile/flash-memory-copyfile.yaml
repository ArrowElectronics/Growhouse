#Copyright (c) 2017, The Linux Foundation. All rights reserved.
#
#Redistribution and use in source and binary forms, with or without
#modification, are permitted provided that the following conditions are
#met:
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above
#      copyright notice, this list of conditions and the following
#      disclaimer in the documentation and/or other materials provided
#      with the distribution.
#    * Neither the name of The Linux Foundation nor the names of its
#      contributors may be used to endorse or promote products derived
#      from this software without specific prior written permission.
#
#THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
#WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
#ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
#BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
#BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
#OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
#IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
metadata:
    format: Lava-Test Test Definition 1.0
    name: flash-memory-copyfile-test

    description: "Checking flash memory read write data rate while copying a test file.
                  Script will try to copy test file when,
                    1. Source is: flash memory and Destination is: flash memory &
                    2. Source is: flash memory and Destination is: flash memory.
                  In both cases, result data rates will be compared with benchmark values given in script params."

    maintainer:

    os:
        - openembedded
        - debian
    scope:
        - functional
    devices:
        - apq8016-sbc
        - apq8096-sbc

params:
    # default source for copy operation will be onboard_flash.

    # storage_device_type       : test storage destination device type
       # Must be one of these: onboard_flash, sdcard-HC, sdcard-XC, sdcard-regular, usb
    # copy_test_file_size       : file size(MB) to copy on storage device. if not given defaults to 1024
    # write_KPI_threshold_MBps  : write KPI MBps(data transfer rate) value. if not given defaults to 0
    # read_KPI_threshold_MBps   : read KPI MBps(data transfer rate) value. if not given defaults to 0
    # if_measure_throughput     : measure file copy throughput or not("true/false"). if not given defaults to "true"
    # connected_devices_num     : number of connected storage devices to check
       # (all devices have to be plugged in at the same time). if not given defaults to 1

    # Note: 
    #   If read_KPI_threshold_MBps/write_KPI_threshold_MBps not supplied in script params, 
    #     1. It's default value will be 0.
    #     2. Test will always pass because measured data transfer rate will be more than the default value 0.
    #     3. measured data transfer rate will be printed in final results
    #     4. test will fail if measured data rate will be less then the given KPI parmater
    #
    # If you want to use the if_measure_throughput option you should insure that "time" is installed on your DUT, else make it "false".
    # By default the if_measure_throughput option is set to "true".
    # if you set it to false the test will only make sure the file have been copied. will not measure copy throughput.
    # In order to install "time" perform: apt-get install time .

    #usage e.g: ./storage-copyfile.sh -d "${storage_device_type}" -f "${copy_test_file_size}" 
    #-w "${write_KPI_threshold_MBps}" -r "${read_KPI_threshold_MBps}" -t "${if_measure_throughput}" -n "${connected_devices_num}"

    storage_device_type: "onboard_flash"
    #copy_test_file_size: "1024"
    #write_KPI_threshold_MBps: "0"
    #read_KPI_threshold_MBps: "0"
    #if_measure_throughput: "true"
    #connected_devices_num: "1"


run:
    steps:
        - cd ./automated/linux/storage/copyfile
        - ./storage-copyfile.sh -d "${storage_device_type}"
        - ../../../utils/send-to-lava.sh ./output/result.txt
