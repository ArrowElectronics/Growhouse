#Copyright (c) 2018, The Linux Foundation. All rights reserved.
#
#Redistribution and use in source and binary forms, with or without
#modification, are permitted provided that the following conditions are
#met:
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above
#      copyright notice, this list of conditions and the following
#      disclaimer in the documentation and/or other materials provided
#      with the distribution.
#    * Neither the name of The Linux Foundation nor the names of its
#      contributors may be used to endorse or promote products derived
#      from this software without specific prior written permission.
#
#THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
#WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
#ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
#BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
#BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
#OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
#IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

metadata:
    format: Lava-Test Test Definition 1.0
    name: i2c-test
    
    description: "testing i2c and GPIOs with 96BOARDS DB600/DB820 Debug mezzanine
                  Prerequisites:
                      1. Test can be performed only with 96BOARDS DB600/DB820 Debug mezzanine connected. 
                      2. SW instruments required: i2cdetect, i2cget, i2cset.
                  Test process:
                      1. i2c_0 and GPIOs test
                      2. Other connected to mezzanine i2c buses test"

    maintainer:

    os:
        - debian
    scope:
        - functional
    devices:
        - apq8016-sbc

# Additional info:
#
# i2c and GPIO test is platform depended. Test that suites to a certain board, probably wan't fit to another board.
# Now test is available for DB410c and DB820c. In order to add support for other boards the following steps have to be performed:
# 
# 1. The following line has to be modified:
#         if [ "$BOARD_NUM" = "410" -o "$BOARD_NUM" = "820" ]; then
#     Exapmle:
#         if [ "$BOARD_NUM" = "410" -o "$BOARD_NUM" = "820" -o "$BOARD_NUM" = "600" ]; then
#
# 2. Function that prepares file with GPIOs for i2c_0 test has to be added. Functions i2c_0_GPIO_make_APQ_GPIO_map_410_table and 
# i2c_0_GPIO_make_APQ_GPIO_map_820_table are such functions. Each of them can be used as basis. A good way to write such function 
# is to copy-paste one of them and make following changes:
#     a. Name. Example:
#          i2c_0_GPIO_make_APQ_GPIO_map_600_table
#     b. Numbers of GPIOs that correspond each letter from A to L. Such information can be obtained from schematics.
#
# 3. Variable that is a list of i2c buses connected to SX1508QBIULTRT chip on mezzanine has to be added.
#     Example:
#        i2c_other_600_bus_addresses="2 3"
#
# 4. elif statement has to be added to the following condition:
#      if [ "$BOARD_NUM" = "410" ]; then
#        local buses_list="$i2c_other_410_bus_addresses"
#      elif [ "$BOARD_NUM" = "820" ]; then
#        local buses_list="$i2c_other_820_bus_addresses"
#      else
#        info_msg "Unknown device: $BOARD_NUM"
#        report_fail "i2c-?"
#      fi
#
#     Example:
#      if [ "$BOARD_NUM" = "410" ]; then
#        local buses_list="$i2c_other_410_bus_addresses"
#      elif [ "$BOARD_NUM" = "820" ]; then
#        local buses_list="$i2c_other_820_bus_addresses"
#      elif [ "$BOARD_NUM" = "600" ]; then
#        local buses_list="$i2c_other_600_bus_addresses"
#      else
#        info_msg "Unknown device: $BOARD_NUM"
#        report_fail "i2c-?"
#      fi
#

run:
    steps:
        - cd ./automated/linux/i2c
        - ./i2c.sh "410"
        - ../../utils/send-to-lava.sh ./output/result.txt
