--- hotspot/src/cpu/zero/vm/entry_zero.hpp.orig
+++ hotspot/src/cpu/zero/vm/entry_zero.hpp
@@ -26,6 +26,10 @@
 #ifndef CPU_ZERO_VM_ENTRY_ZERO_HPP
 #define CPU_ZERO_VM_ENTRY_ZERO_HPP
 
+#include "utilities/globalDefinitions.hpp"
+#include "utilities/exceptions.hpp"
+#include "interpreter/cppInterpreter.hpp"
+
 class ZeroEntry {
  public:
   ZeroEntry() {
--- hotspot/src/share/vm/interpreter/cppInterpreterGenerator.hpp.orig
+++ hotspot/src/share/vm/interpreter/cppInterpreterGenerator.hpp
@@ -30,6 +30,10 @@
 
 #ifdef CC_INTERP
 
+#ifdef TARGET_ARCH_zero
+#include "entry_zero.hpp"
+#endif
+
 class CppInterpreterGenerator: public AbstractInterpreterGenerator {
   protected:
   // shared code sequences
--- hotspot/src/cpu/zero/vm/nativeInst_zero.cpp.orig
+++ hotspot/src/cpu/zero/vm/nativeInst_zero.cpp
@@ -26,6 +26,9 @@
 #include "precompiled.hpp"
 #include "assembler_zero.inline.hpp"
 #include "memory/resourceArea.hpp"
+#ifdef CC_INTERP
+#include "entry_zero.hpp"
+#endif
 #include "nativeInst_zero.hpp"
 #include "oops/oop.inline.hpp"
 #include "runtime/handles.hpp"
